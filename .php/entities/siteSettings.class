<?php 

class siteSettingsFields extends _fieldset{
	 public $siteTitle;
	 public $siteUrl;
	 public $loginNotice;
	 public $organizationUrl;
	 public $organization;
	 public $organizationDescription;
	 public $contactName;
	 public $contactEmail;
	 public $showPublicSite;
	 public $showCostReports;
	 public $showRevenueReports;
	 public $publicFillColor;
	 public $publicSiteColor;
	 public $publicPageColor;
	 public $publicMenuColor;
	 public $publicMenuColorHover;
	 public $publicTextColor;
	 public $publicTextColorHover;			
	 public $publicFontFamily;
	 public $publicFontSizeTitle;
	 public $publicfontSizeHeading;
	 public $publicFontSizeMenu;
	 public $publicFontSizeText;
	 
	public function __construct(){
		parent::__construct();
	    $this->echoPrint(true,'begin','__construct','siteSettingsFields');
		$this->siteTitle = new _nameField('site_title','site-title','Site.Title');
	 	$this->siteUrl = new _urlField('site_url','site-url','Site.URL');
	 	$this->loginNotice = new _notesField('login_notice','login-notice', 'Login.Notice');
	 	$this->organizationUrl = new _urlField('organization_url','organization-url','Organization.URL');
	 	$this->organization = new _nameField('organization','organization','Organization');
	 	$this->organizationDescription = new _descriptionField('organization_description','organization-description','Organization.Description');
	 	$this->contactName = new _nameField('contact_name','contact-name','Contact Name');
	 	$this->contactEmail = new _emailField('contact_email','contact-email','Contact Email');
		$this->showPublicSite = new _yesNoField('show_public_site','show-public-site','show.Public.Site');
		$this->showCostReports = new _yesNoField('show_cost_reports','show-cost-reports','show.Cost.Reports');
		$this->showRevenueReports = new _yesNoField('show_revenue_reports','show-revenue-reports','show.Revenue.Reports');
		$this->publicFillColor = new _cssColorField('public_fill_color','public-fill-color','public.Fill.Color');
		$this->publicSiteColor = new _cssColorField('public_site_color','public-site-color','public.Site.Color');
		$this->publicPageColor = new _cssColorField('public_page_color','public-page-color','public.Page.Color');
		$this->publicMenuColor = new _cssColorField('public_menu_color','public-menu-color','public.Menu.Color');
		$this->publicMenuColorHover = new _cssColorField('public_menu_color_hover','public-menu-color-hover','public.Menu.Color.Hover');
	 	$this->publicTextColor = new _cssColorField('public_text_color','public-text-color','public.Text.Color');
	 	$this->publicTextColorHover = new _cssColorField('public_text_color_hover','public-text-color-hover','public.Text.Color.Hover');
	 	$this->publicFontFamily = new _fontFamilyField('public_font_family','public-font-family','public.Font.Family');
	 	$this->publicFontSizeTitle = new _fontSizeField('public_font_size_title','public-font-size-title','public.Font.Size.Title');
	 	$this->publicFontSizeHeading = new _fontSizeField('public_font_size_heading','public-font-size-heading','public.Font.Size.Heading');
	 	$this->publicFontSizeMenu = new _fontSizeField('public_font_size_menu','public-font-size-menu','public.FontSizeMenu');
	 	$this->publicFontSizeText = new _fontSizeField('public_font_size_text','public-font-size-text','publicFontSizeText');
		
	}
	
	public function setEnvironment(string $env = 'POST'){
		$this->echoPrint(true,'begin','setEnv','siteSettingsFields');
		parent::setEnvironment($env);
		
	$this->siteTitle->env->setEnvironment($env);
		 
	$this->siteUrl->env->setEnvironment($env);
	$this->loginNotice->env->setEnvironment($env);
	$this->organization->env->setEnvironment($env);
	$this->organizationUrl->env->setEnvironment($env);
	$this->organizationDescription->env->setEnvironment($env);
	$this->contactName->env->setEnvironment($env);
	$this->contactEmail->env->setEnvironment($env);
	$this->showPublicSite->env->setEnvironment($env);
	$this->showCostReports->env->setEnvironment($env);
	$this->showRevenueReports->env->setEnvironment($env);
	$this->publicFillColor->env->setEnvironment($env);
	$this->publicSiteColor->env->setEnvironment($env);
	$this->publicPageColor->env->setEnvironment($env);
	$this->publicMenuColor->env->setEnvironment($env);
	$this->publicMenuColorHover->env->setEnvironment($env);
	$this->publicTextColor->env->setEnvironment($env);
	$this->publicTextColorHover->env->setEnvironment($env);
	$this->publicFontFamily->env->setEnvironment($env);
	$this->publicFontSizeTitle->env->setEnvironment($env);
	$this->publicFontSizeHeading->env->setEnvironment($env);
	$this->publicFontSizeMenu->env->setEnvironment($env);
	$this->publicFontSizeText->env->setEnvironment($env);
		
	}
	
	public function fetch($row){
		$this->echoPrint(true,'begin','fetch','siteSettingsFields');
		parent::fetch($row);
		
		 $this->siteTitle->fetch($row);
		 
		 $this->siteUrl->fetch($row);
		 $this->loginNotice->fetch($row);
		 $this->organization->fetch($row);
		 $this->organizationUrl->fetch($row);
		 $this->organizationDescription->fetch($row);
		 $this->contactName->fetch($row);
		 $this->contactEmail->fetch($row);
		 $this->showPublicSite->fetch($row);
		 $this->showCostReports->fetch($row);
		 $this->showRevenueReports->fetch($row);
		 $this->publicFillColor->fetch($row);
		 $this->publicSiteColor->fetch($row);
		 $this->publicPageColor->fetch($row);
		 $this->publicMenuColor->fetch($row);
		 $this->publicMenuColorHover->fetch($row);
		 $this->publicTextColor->fetch($row);
		 $this->publicTextColorHover->fetch($row);
		 $this->publicFontFamily->fetch($row);
		 $this->publicFontSizeTitle->fetch($row);
		 $this->publicFontSizeHeading->fetch($row);
		 $this->publicFontSizeMenu->fetch($row);
		 $this->publicFontSizeText->fetch($row);
		
	}
	
	public function defaults(){
		parent::defaults();
		
		$this->siteTitle->reset('default');
		// $this->name->set($this->siteTitle->value);
		 $this->siteUrl->reset('default');
		 $this->loginNotice->reset('default');
		 $this->organization->reset('default');
		 $this->organizationUrl->reset('default');
		 $this->organizationDescription->reset('default');
		 $this->contactName->reset('default');
		 $this->contactEmail->reset('default');
		 $this->showPublicSite->reset('yes');
		 $this->showCostReports->reset('no');
		 $this->showRevenueReports->reset('no');
		 $this->publicFillColor->reset('none');
		 $this->publicSiteColor->reset('none');
		 $this->publicPageColor->reset('none');
		 $this->publicMenuColor->reset('none');
		 $this->publicMenuColorHover->reset('none');
		 $this->publicTextColor->reset('black');
		 $this->publicTextColorHover->reset('green');
		 $this->publicFontFamily->reset('Arial');
		 $this->publicFontSizeTitle->reset(20);
		 $this->publicFontSizeHeading->reset(16);
		 $this->publicFontSizeMenu->reset(14);
		 $this->publicFontSizeText->reset(12);
		
	}
	
	public function format(){
		parent::format();
		
		 $this->siteTitle->format();
		
		 $this->siteUrl->format();
		 $this->loginNotice->format();
		 $this->organization->format();
		 $this->organizationUrl->format();
		 $this->organizationDescription->format();
		 $this->contactName->format();
		 $this->contactEmail->format();
		 $this->showPublicSite->format();
		 $this->showCostReports->format();
		 $this->showRevenueReports->format();
		 $this->publicFillColor->format();
		 $this->publicSiteColor->format();
		 $this->publicPageColor->format();
		 $this->publicMenuColor->format();
		 $this->publicMenuColorHover->format();
		 $this->publicTextColor->format();
		 $this->publicTextColorHover->format();
		 $this->publicFontFamily->format();
		 $this->publicFontSizeTitle->format();
		 $this->publicFontSizeHeading->format();
		 $this->publicFontSizeMenu->format();
		 $this->publicFontSizeText->format();
	}
	
	public function listCaption(){
		$this->echoPrint(true,'begin','listCaption','siteSettingsFields');
		$this->addContent(parent::listCaption(),true);
		 $this->addContent($this->siteTitle->listCaption(),true);
		 $this->addContent($this->siteUrl->listCaption());
		 $this->addContent($this->loginNotice->listCaption());
		 $this->addContent($this->organization->listCaption());
		 $this->addContent($this->organizationUrl->listCaption());
		 $this->addContent($this->organizationDescription->listCaption());
		 $this->addContent($this->contactName->listCaption());
		 $this->addContent($this->contactEmail->listCaption());
		 $this->addContent($this->showPublicSite->listCaption());
		 $this->addContent($this->showCostReports->listCaption());
		 $this->addContent($this->showRevenueReports->listCaption());
		 $this->addContent($this->publicFillColor->listCaption());
		 $this->addContent($this->publicSiteColor->listCaption());
		 $this->addContent($this->publicPageColor->listCaption());
		 $this->addContent($this->publicMenuColor->listCaption());
		 $this->addContent($this->publicMenuColorHover->listCaption());
		 $this->addContent($this->publicTextColor->listCaption());
		 $this->addContent($this->publicTextColorHover->listCaption());
		 $this->addContent($this->publicFontFamily->listCaption());
		 $this->addContent($this->publicFontSizeTitle->listCaption());
		 $this->addContent($this->publicFontSizeHeading->listCaption());
		 $this->addContent($this->publicFontSizeMenu->listCaption());
		 $this->addContent($this->publicFontSizeText->listCaption());
		return $this->getContent();
	}
	
	public function listDetail(){
		$this->addContent(parent::listDetail(),true);
		
		 $this->addContent($this->siteTitle->listDetail(),true);
		 $this->addContent($this->siteUrl->listDetail());
		 $this->addContent($this->loginNotice->listDetail());
		 $this->addContent($this->organization->listDetail());
		 $this->addContent($this->organizationUrl->listDetail());
		 $this->addContent($this->organizationDescription->listDetail());
		 $this->addContent($this->contactName->listDetail());
		 $this->addContent($this->contactEmail->listDetail());
		 $this->addContent($this->showPublicSite->listDetail());
		 $this->addContent($this->showCostReports->listDetail());
		 $this->addContent($this->showRevenueReports->listDetail());
		 $this->addContent($this->publicFillColor->listDetail());
		 $this->addContent($this->publicSiteColor->listDetail());
		 $this->addContent($this->publicPageColor->listDetail());
		 $this->addContent($this->publicMenuColor->listDetail());
		 $this->addContent($this->publicMenuColorHover->listDetail());
		 $this->addContent($this->publicTextColor->listDetail());
		 $this->addContent($this->publicTextColorHover->listDetail());
		 $this->addContent($this->publicFontFamily->listDetail());
		 $this->addContent($this->publicFontSizeTitle->listDetail());
		 $this->addContent($this->publicFontSizeHeading->listDetail());
		 $this->addContent($this->publicFontSizeMenu->listDetail());
		 $this->addContent($this->publicFontSizeText->listDetail());

		return $this->getContent();
	}
	
	public function displayDetail(){
		$this->echoPrint(true,'begin','display','siteSettingsFields');
		$this->addContent(parent::displayDetail(),true);
		
		 $this->addContent($this->siteTitle->displayDetail(),true);
		 $this->addContent($this->siteUrl->displayDetail());
		 $this->addContent($this->loginNotice->displayDetail());
		 $this->addContent($this->organization->displayDetail());
		 $this->addContent($this->organizationUrl->displayDetail());
		 $this->addContent($this->organizationDescription->displayDetail());
		 $this->addContent($this->contactName->displayDetail());
		 $this->addContent($this->contactEmail->displayDetail());
		 $this->addContent($this->showPublicSite->displayDetail());
		 $this->addContent($this->showCostReports->displayDetail());
		 $this->addContent($this->showRevenueReports->displayDetail());
		 $this->addContent($this->publicFillColor->displayDetail());
		 $this->addContent($this->publicSiteColor->displayDetail());
		 $this->addContent($this->publicPageColor->displayDetail());
		 $this->addContent($this->publicMenuColor->displayDetail());
		 $this->addContent($this->publicMenuColorHover->displayDetail());
		 $this->addContent($this->publicTextColor->displayDetail());
		 $this->addContent($this->publicTextColorHover->displayDetail());
		 $this->addContent($this->publicFontFamily->displayDetail());
		 $this->addContent($this->publicFontSizeTitle->displayDetail());
		 $this->addContent($this->publicFontSizeHeading->displayDetail());
		 $this->addContent($this->publicFontSizeMenu->displayDetail());
		 $this->addContent($this->publicFontSizeText->displayDetail());
		
		return $this->getContent();
	}
	
	public function read(){
		 parent::read();
		
		 $this->siteTitle->read();
		 //$this->name->set($this->siteTitle->value);
		 $this->siteUrl->read();
		 $this->loginNotice->read();
		 $this->organization->read();
		 $this->organizationUrl->read();
		 $this->organizationDescription->read();
		 $this->contactName->read();
		 $this->contactEmail->read();
		 $this->showPublicSite->read();
		 $this->showCostReports->read();
		 $this->showRevenueReports->read();
		 $this->publicFillColor->read();
		 $this->publicSiteColor->read();
		 $this->publicPageColor->read();
		 $this->publicMenuColor->read();
		 $this->publicMenuColorHover->read();
		 $this->publicTextColor->read();
		 $this->publicTextColorHover->read();
		 $this->publicFontFamily->read();
		 $this->publicFontSizeTitle->read();
		 $this->publicFontSizeHeading->read();
		 $this->publicFontSizeMenu->read();
		 $this->publicFontSizeText->read();
	}
	
	public function write(){
		parent::write();

		$this->siteTitle->write();
		//$this->name->set($this->siteTitle->value);
		$this->siteUrl->write();
		$this->loginNotice->write();
		$this->organization->write();
		$this->organizationUrl->write();
		$this->organizationDescription->write();
		$this->contactName->write();
		$this->contactEmail->write();
		$this->showPublicSite->write();
		$this->showCostReports->write();
		$this->showRevenueReports->write();
		$this->publicFillColor->write();
		$this->publicSiteColor->write();
		$this->publicPageColor->write();
		$this->publicMenuColor->write();
		$this->publicMenuColorHover->write();
		$this->publicTextColor->write();
		$this->publicTextColorHover->write();
		$this->publicFontFamily->write();
		$this->publicFontSizeTitle->write();
		$this->publicFontSizeHeading->write();
		$this->publicFontSizeMenu->write();
		$this->publicFontSizeText->write();
	}
}

class siteSettings extends _entity{
	protected $__MyClassName = 'SiteSettings';
	protected $_titleEntity = 'Site Settings';

	protected function setHelperClasses(){
		$this->f = new siteSettingsFields();
		$this->links = new siteSettingsLinks();
		$this->sql = new siteSettingsSQL();
	}
	
	public function setDetails(){
		$this->verifySettings();
		parent::setDetails();/*
		//if ($this->id > 0){
			$sql = $this->sql->info($this->id);
			$result = dbGetResult($sql);
			if($result){
				while ($row = $result->fetch_assoc())
				{	
					$this->f->setRow($row);
				}
				$result->close();
				//$this->getFieldIds();
			}
			
		//}*/
		$this->setSessionDetails();	
	}
    

	
	protected function verifySettings(){
		$sql = $this->sql->count();
		
		$i = dbGetCount($sql, 'count_settings', 0, 'verifySettings');
		if ($i == 0){
			$this->createSettings();	
		}
	}
	

	protected function setSessionDetails(){
	$this->echoPrint(true,'begin','setSessionDetails','siteSettings');
		if (($this->pageMode != 'EDIT') && ($this->pageMode != 'ADD')){
			$this->f->format();
		}
		$this->echoPrint(true,$this->f->siteTitle->value(),'setSessionDetails','siteSettings');
		$this->f->setEnvironment('SESSION');
		 $this->f->siteTitle->write();	
		 $this->f->siteUrl->write();	
		 $this->f->loginNotice->write();
		 $this->f->organization->write();	
		$this->f->organizationUrl->write();
		$this->f->contactName->write();	
		 $this->f->contactEmail->write();	
		 $this->f->showPublicSite->write();	
		 $this->f->showCostReports->write();
		 $this->f->showRevenueReports->write();
	}
	
	protected function unsetSessionDetails(){
		$this->f->setEnvironment('SESSION');
				 $this->f->siteTitle->env->remove();	
		 $this->f->siteUrl->env->remove();	
		 $this->f->loginNotice->env->remove();
		 $this->f->organization->env->remove();	
		$this->f->organizationUrl->env->remove();
		$this->f->contactName->env->remove();	
		 $this->f->contactEmail->env->remove();	
		 $this->f->showPublicSite->env->remove();	
		 $this->f->showCostReports->env->remove();
		 $this->f->showRevenueReports->env->remove();
	}
	
	protected function setPageMenu(){
		$menuType = 'LIST';
		$menuStyle = 'menu';		
		$settingsL = new SiteSettingsLinks($menuType,$menuStyle);
		$menuL = new MenuLinks($menuType,$menuStyle);

		$menu = $settingsL->openMenu('section-heading-links');
		
		$menu .= $menuL->linkReference();
		$menu .= $settingsL->resetMenu();
		if ($this->pageMode == 'VIEW'){
			$menu .= $settingsL->detailEditHref();
		} elseif ($this->pageMode == 'EDIT'){
			$menu .= $settingsL->detailViewHref();
		}
		$menu .= $settingsL->closeMenu();
		$this->_pageMenu = $menu;
	}
	
	protected function afterDisplay(){
		$detail = $this->getPublicSiteStylesFieldset('true');
		return $detail;
	}
	
	private function getPublicSiteStylesFieldset($disabled = 'false'){

		$styles = openFieldset('Public Site Presentation Styles');
		//need disabled swtch for relevant inputs
		$styles .= $this->f->publicFillColor->input();
		$styles .= $this->f->publicSiteColor->input();
		$styles .= $this->f->publicPageColor->input();
		$styles .= $this->f->publicMenuColor->input();
		$styles .= $this->f->publicMenuColorHover->input();
		$styles .= $this->f->publicTextColor->input();
		$styles .= $this->f->publicTextColorHover->input();
		$styles .= $this->f->publicFontSizeTitle->input();
		$styles .= $this->f->publicFontSizeHeading->input();
		$styles .= $this->f->publicFontSizeMenu->input();
		$styles .= $this->f->publicFontSizeText->input();
		$styles .= $this->f->publicFontFamily->input();
	
		//add the sample region after the first color select
		//$styles .= wrapDiv($this->publicSiteSample(),'public-site-sample','site-sample');

		//$styles .= closeDiv();
		$styles .= closeFieldset();
		return $styles;
	}
	
	public function publicSiteSample(){
		
		
		//sample is inserted into the editing td just after the first color select list
		//force a close on the td and reopen a td with rowspan set to all seven selects
		//this inserts the sample neatly beside all select lists
		
		$td = new _td();
		$x = $td->close();
		
		$td = new _td('none','editing-td');
		$td->addAttribute('width', '50%');
		$td->addAttribute('rowspan',11);
		$x .= $td->open();
		
		$style = minHeightPixels(200).setPadding(10).setFontFamily($this->f->publicFontFamily->value);
		$style .= setFont($this->f->publicFontSizeText->value,'normal','normal').colorBackground($this->f->publicFillColor->value);
		$div = new _div();
		$div->setStyle($style);
		$x .= $div->open();

		$style = setPadding(10).colorBackground($this->f->publicSiteColor->value);
		$div = new _div();
		$div->setStyle($style);
		$x .= $div->open();
		

		$style = setPadding(10).widthPixels(75).setFloat('left');
		$style .= colorBackground($this->f->publicMenuColor->value).setFont($this->f->publicFontSizeMenu->value,'normal','normal');
		$div = new _div();
		$div->setStyle($style);
		$x .= $div->open();
		
		
		$style = clearListStyle().clearMarginPadding();
		$list = new _ul();
		$list->setStyle($style);
		$x .= $list->open();
		
		$style = setDisplay('block').colorText($this->f->publicTextColor->value);
		$li = new _li();
		$li->setStyle($style);
		$x .= $li->wrap('Menu Item');
	
		$style = setDisplay('block').colorText($this->f->publicTextColorHover->value);
		$style .= colorBackground($this->f->publicMenuColorHover->value);
		$li = new _li();
		$li->setStyle($style);
		$x .= $li->wrap('Menu Item Hover');
	
		$x .= closeList();
		$x .= closeDiv();
	
		$style = setPadding(10).setMarginCustom('left',100);
		$style .= colorBackground($this->f->publicPageColor->value).colorText($this->f->publicTextColor->value);
		$div = new _div();
		$div->setStyle($style);
		$x .= $div->open();
		
		$x .= spanStyled('Titles',setFont($this->f->publicFontSizeTitle->value,'normal','bold')).br();
		$x .= spanStyled('Headings',setFont($this->f->publicFontSizeHeading->value,'normal','bold')).br();
		$x .= spanStyled('Content Text'.br().'...',setFont($this->f->publicFontSizeText->value,'normal','normal')).br();
		$x .= closeDiv();		
		$x .= closeDiv();		
		$x .= closeDiv();

		return $x;		
	}
	
	protected function editForm(){
		
		$entity = 'site-settings';
		$this->f->setEntity($entity);
		$contextMenu = $this->links->formatToggleLink('formOptional','+Options');

		$edit = new _inputForm($entity,$this->pageMode,$this->pageSave);
		$edit->open($contextMenu,$this->_titleEntity);
		
		$edit->required->addContent($this->f->siteTitle->input());
		$edit->required->addContent($this->f->siteUrl->input());	
		$edit->required->addContent($this->f->contactName->input());
		$edit->required->addContent($this->f->contactEmail->input());
		$edit->optional->addContent($this->f->organization->input());
		$edit->optional->addContent($this->f->organizationUrl->input());
		$edit->optional->addContent($this->f->organizationDescription->input());
		$edit->optional->addContent($this->f->loginNotice->input());
		$edit->optional->addContent($this->f->showCostReports->input());
		$edit->optional->addContent($this->f->showRevenueReports->input());
		$edit->optional->addContent($this->f->showPublicSite->input());	
		
		$edit->optional->addContent($this->getPublicSiteStylesFieldset('false'));

		$edit->hidden->addContent(getHiddenInput('mode', $this->pageMode));
		
		$edit->submit->addContent(getSaveChangesResetButtons());
		return $edit->close();
	}
	

	
	private function createSettings(){

		
		$sql = new _sqlWriter('INSERT');

		$sql->editField($this->f->siteTitle);
		$sql->editField($this->f->siteUrl);
		$sql->editField($this->f->loginNotice);
		$sql->editField($this->f->organization);
		$sql->editField($this->f->organizationUrl);
		$sql->editField($this->f->organizationDescription);
		$sql->editField($this->f->contactName);
		$sql->editField($this->f->contactEmail);
		$sql->editField($this->f->publicFillColor);
		$sql->editField($this->f->publicSiteColor);
		$sql->editField($this->f->publicPageColor);
		$sql->editField($this->f->publicMenuColor);
		$sql->editField($this->f->publicMenuColorHover);
		$sql->editField($this->f->publicTextColor);
		$sql->editField($this->f->publicTextColorHover);
		$sql->editField($this->f->publicFontFamily);
		$sql->editField($this->f->publicFontSizeTitle);
		$sql->editField($this->f->publicFontSizeHeading);
		$sql->editField($this->f->publicFontSizeMenu);
		$sql->editField($this->f->publicFontSizeText);
		$sql->editField($this->f->showPublicSite);
		$sql->editField($this->f->showCostReports);
		$sql->editField($this->f->showRevenueReports);
		
		$result = dbRunSQL($sql->editStatement('sitewide_settings'));
		

	}


	protected function saveUpdate(){
		$sql = new _sqlWriter('UPDATE');

		$sql->editField($this->f->siteTitle);
		$sql->editField($this->f->siteUrl);
		$sql->editField($this->f->loginNotice);
		$sql->editField($this->f->organization);
		$sql->editField($this->f->organizationUrl);
		$sql->editField($this->f->organizationDescription);
		$sql->editField($this->f->contactName);
		$sql->editField($this->f->contactEmail);
		$sql->editField($this->f->publicFillColor);
		$sql->editField($this->f->publicSiteColor);
		$sql->editField($this->f->publicPageColor);
		$sql->editField($this->f->publicMenuColor);
		$sql->editField($this->f->publicMenuColorHover);
		$sql->editField($this->f->publicTextColor);
		$sql->editField($this->f->publicTextColorHover);
		$sql->editField($this->f->publicFontFamily);
		$sql->editField($this->f->publicFontSizeTitle);
		$sql->editField($this->f->publicFontSizeHeading);
		$sql->editField($this->f->publicFontSizeMenu);
		$sql->editField($this->f->publicFontSizeText);
		$sql->editField($this->f->showPublicSite);
		$sql->editField($this->f->showCostReports);
		$sql->editField($this->f->showRevenueReports,true);
		
		$result = dbRunSQL($sql->editStatement('sitewide_settings'));
		
		$this->f->setSessionDetails();
		
	
	}
	
}
?>
