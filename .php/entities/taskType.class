<?php 
/* reviewed 7/26  editForm next */
class taskTypeFields extends _fieldsetEntityType{
	public $frequency;
	public function __construct(){
		parent::__construct();
		$this->frequency = new _nameField('frequency','frequency','Frequency');
		$this->_register('frequency',$this->frequency);
	}
	public function setDefaults(){
		parent::setDefaults();
		$this->frequency->setDefault('none');
	}
}

class taskTypeSQL extends _entityTypeSQL{
	public function __construct(){
		$this->baseTable = 'task_types';
	}
	protected function cols(){
		$c = parent::cols();
		$c .= ", et.frequency ";
		return $c;	
	}
}
class taskTypeLinks extends _entityTypeLinks{
	protected $context = 'taskType';
	protected $pageList = 'pr_TaskType_List.php';
	protected $pageDetail = 'pr_TaskType_Detail.php';
}

class taskType extends _entityType{
	public function __construct($mode = 'VIEW', $id = 0, $idParent = 0){
		$this->__MyClassName = 'taskType';
		parent::__construct($mode, $id, $idParent);
  		$this->_titleEntity = 'Task Type';
     	$this->pageSave = 'pr_TaskType_Save.php';
		$this->f = new taskTypeFields();
		$this->sql = new taskTypeSQL();
		$this->links = new taskTypeLinks();
	}
	
	public function optionsFrequency($selectedValue = 'none', $idName = 'frequency', $disabled = 'false'){
		$sql = "SELECT f.frequency value, f.description caption ";
		$sql .= "FROM task_type_frequencies f ";
		if ($disabled == 'true'){
			$sql = " WHERE f.frequency = '".$selectedValue."' ";	
		}
		$sql .= " ORDER BY f.display_order ";
		
		$defaultValue = 'none';
		$defaultCaption = '-not set';
		$allOptions = getSelectOptionsSQL($sql,$selectedValue,$disabled,$defaultValue,$defaultCaption);		
		
		$select = getSelectList($idName,$allOptions,'none',$disabled );
		return $select;
	}	
	
	
	protected function editForm(){
		$entity = 'task-type';
		$contextMenu = $this->links->formatToggleLink('formOptional','+Options');

		$edit = new _inputForm($entity,$this->pageMode,$this->pageSave);
		$edit->open($contextMenu,$this->_titleEntity);
		$edit->required->addContent($this->f->name->input());
		
		$select = $this->optionsFrequency($this->f->frequency->value(),$this->f->frequency->env->variable());
		$edit->required->addContent($this->f->frequency->inputChoice( $select));
		
		$edit->required->addContent($this->f->displayOrder->input());
		$edit->required->addContent(inputFieldHighlightStyle($entity,$this->f->highlight->value(),'highlight'));
		$edit->optional->addContent($this->f->description->input());
		$edit->optional->addContent($this->f->notes->input());
		$edit->hidden->addContent(getHiddenInput('mode', $this->pageMode));
		$edit->hidden->addContent($this->f->id->inputHidden());
		$edit->submit->addContent(getSaveChangesResetButtons());
		return $edit->close();
	
	}
	
	protected function saveUpdate(){
	
			$sql = " UPDATE task_types AS p ";
			$sql .= " SET ";
			$sql .= " p.name = '".$this->f->name->value()."', ";
			$sql .= " p.frequency = '".$this->f->frequency->value()."', ";
			$sql .= " p.display_order = ".$this->f->displayOrder->value().", ";
			$sql .= " p.description = '".$this->f->description->value()."', ";
			$sql .= " p.updated = CURRENT_TIMESTAMP, ";
			$sql .= " p.highlight_style = '".$this->f->highlight->value()."', ";
			$sql .= " p.notes = '".$this->f->notes->value()."' ";
			$sql .= " WHERE p.id = ".$this->f->id->value()."  ";			
			$result = dbRunSQL($sql);
	}
	
	protected function saveInsert(){
	
			$sql = " INSERT INTO task_types ";
			$sql .= " (name, ";
			$sql .= " frequency, ";
			$sql .= " display_order, ";
			$sql .= " created, ";
			$sql .= " updated, ";
			$sql .= " description, ";
			$sql .= " highlight_style, ";
			$sql .= " notes) ";
			$sql .= " VALUES (";
			$sql .= " '".$this->f->name->value()."', ";
			$sql .= " '".$this->f->frequency->value()."', ";
			$sql .= " ".$this->f->displayOrder->value().", ";
			$sql .= " CURRENT_TIMESTAMP, ";
			$sql .= " CURRENT_TIMESTAMP, ";
			$sql .= " '".$this->f->description->value()."', ";
			$sql .= " '".$this->f->highlight->value()."', ";
			$sql .= " '".$this->f->notes->value()."') ";
			$result = dbRunSQL($sql);
			
			$this->id = dbInsertedId();
	}
} 
class taskTypeList extends _entityTypeList{
 	public function __construct($mode = 'VIEW', $id = 0, $idParent = 0){
		$this->__MyClassName = 'TaskTypeList';
		parent::__construct($mode, $id, $idParent);
		$this->_titleEntity = 'Task Types';
		$this->base = new taskType($this->pageMode,$this->id,$this->idParent);
	}
}
?>
