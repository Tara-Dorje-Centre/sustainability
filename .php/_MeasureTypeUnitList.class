<?php 

class MeasureTypeUnitList{
	public $measureTypeId = 0;
	public $found = 0;
	public $resultPage = 1;
	public $perPage = 10;
	public $measureType;
	private $sql;
	
	public function __construct(){
		$this->sql = new MeasureTypeUnitSQL;
		$this->measureType = new MeasureType;
	}
	
	public function setDetails($measureTypeId, $resultPage = 1, $resultsPerPage = 10){
		$this->measureTypeId = $measureTypeId;	
		$this->resultPage = $resultPage;
		$this->perPage = $resultsPerPage;
		
		$this->measureType->setDetails($measureTypeId, 0, 'VIEW');
		$this->setFoundCount();
	}
	
	
	public function pageTitle(){
		$title = openDiv('section-heading-title','none');
		if ($this->measureType->id > 0){
			$title .= $this->measureType->name.br();
		} else {
			$title .= 'All Measure Types:'.br();
		}
		$title .= 'Measure Type Units';
		$title .= closeDiv();
		return $title;	
	}	

	public function pageMenu(){
		$menuType = 'LIST';
		$menuStyle = 'menu';
		
		$units = new UnitOfMeasureLinks($menuType,$menuStyle);
		$measureTypes = new MeasureTypeLinks($menuType,$menuStyle);
		$measureTypeUnits = new MeasureTypeUnitLinks($menuType,$menuStyle);

		
		$menu = $units->openMenu('section-heading-links');
	
		$mtul = new MeasureTypeUnitLinks;
		$mtl = new MeasureTypeLinks;
		$uml = new UnitOfMeasureLinks;			

		if ($this->measureTypeId > 0){
			$menu .= $measureTypeUnits->detailAddHref($this->measureType->id);
		}
		$menu .= $measureTypeUnits->listingHref($this->measureType->id,'Refresh');
		$menu .= $units->resetMenu();
		
		$menu .= $measureTypeUnits->listingHref(0);
		$menu .= $units->resetMenu();
		$menu .= $measureTypes->listingHref();
		$menu .= $units->listingHref();		
		
		$menu .= $units->closeMenu();	
		return $menu;			
	}	
	
	public function getPageHeading(){
		$heading = $this->pageTitle();
		$heading .= $this->pageMenu();
		return $heading;
	}	
	
	private function setFoundCount(){
		$s = new MeasureTypeUnitSQL;
		$sql = $s->countMeasureTypeUnits($this->measureType->id);
		$this->found = dbGetCount($sql, 'total_units');
	}		
	
	public function printPage(){
		
		$heading = $this->getPageHeading();
		$details = $this->getPageDetails();

		$site = new _SiteTemplate;
		$site->setSiteTemplateDetails($heading, $details);
		$site->printSite();
		
	}

	public function getPageDetails(){
	
		$details = $this->getListing();
		return $details;
		
	}
	
	
	public function getListing(){
		$s = new MeasureTypeUnitSQL;
		$sql = $s->listMeasureTypeUnits($this->measureType->id,$this->resultPage,$this->perPage);

		
		$ml = new MeasureTypeUnitLinks;
		$pagingLinks = $ml->listingPaged($this->measureType->id, $this->found,$this->resultPage,$this->perPage);
		if ($this->measureType->id > 0){
			$mtu = new MeasureTypeUnit;
			$mtu->setDetails(0,$this->measureType->id,'ADD');
			$quickEdit = $mtu->editForm();
		} else {
			$quickEdit = NULL;
		}
		$list = openDisplayList('measure-type-unit','Measure Type Units',$pagingLinks,$quickEdit);

		$heading =  wrapTh('Measure Type');
		$heading .=  wrapTh('Unit Type');
		$heading .=  wrapTh('Unit of Measure');
		$heading .=  wrapTh('Unit Symbol');
		$list .=  wrapTr($heading);

		$result = dbGetResult($sql);
		if($result){
		while ($row = $result->fetch_assoc())
		{	
			$m = new MeasureTypeUnit;
			$m->id = $row["id"];
			$m->measureTypeId = $row["measure_type_id"];
			$m->unitOfMeasureId = $row["unit_measure_id"];
			$m->measureTypeName = stripslashes($row["measure_type"]);
			$m->unitType = stripslashes($row["unit_type"]);
			$m->unitOfMeasure = stripslashes($row["unit_of_measure"]);
			$m->unitSymbol = stripslashes($row["unit_symbol"]);
			
			$link = $ml->detailViewEditHref($m->id,$m->getMeasureTypeAndUnitSymbol());
			$detail =  wrapTd($link);
			$detail .=  wrapTd($m->unitType);
			$detail .=  wrapTd($m->unitOfMeasure);
			$detail .=  wrapTd($m->unitSymbol);
			$list .=  wrapTr($detail);
		}
		$result->close();
		}

		$list .=  closeDisplayList();
		return $list;
	}
}
?>
