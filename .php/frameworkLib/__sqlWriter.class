<?php 

class _sqlClause extends _contentWriter{
public function __construct(){

	$this->resetContent(true);
}

}

 class _sqlWriter extends _contentWriter{
 protected $sqlType = 'SELECT';
 protected $_cols;
 protected $_tables;
 protected $useWhere = false;
 protected $_where;
 protected $useOrder = false;
 protected $_order;
 protected $useGroup = false;
 protected $_group;
 protected $useLimit = false;
 protected $_limit;
 protected $_values;

 public function __construct($sqlType = 'SELECT'){
 $this->sqlType = $sqlType;
 $this->_tables = new _sqlClause();
 $this->_where = new _sqlClause();
 switch ($this->sqlType){
 case 'SELECT':
 $this->_cols = new _sqlClause();
 $this->_tables = new _sqlClause();

 $this->_group = new _sqlClause();
 $this->_order = new _sqlClause();
 $this->_limit = new _sqlClause();
 break;
 case 'UPDATE':
 $this->_values = new _sqlClause();
 break;
 case 'INSERT';
 $this->_cols = new _sqlClause();
 $this->_values = new _sqlClause();
 break;
 default:
 //nvalid statement type
 }

 }

 protected function lastItem($last = false){
 if ($last == false){
 $lineEnd = ", ";
 } else {
 $lineEnd = " ";
 }
 return $lineEnd;
 }
 public function editColumn(string $field, $value,bool $last = false){
 switch($this->sqlType){
 case 'UPDATE':
 $this->_values->addContent($field." = ".$value);
 $this->_values->addContent($this->lastItem($last));
 break;
 case 'INSERT':
 $this->_cols->addContent($field);
 $this->_cols->addContent($this->lastItem($last));
 $this->_values->addContent($value);
 $this->_values->addContent($this->lastItem($last));
 break;
 default:

 }
 }
 public function editField(_field &$fld, $last = false){
 $this->editColumn($fld->dbColumn,$fld->valueSQL(),$last);
 }
 public function where($field,$value,$last = false){
 $this->useWhere = true;
 $this->_where->addContent("(".$field." = ".$value.")");
 if ($last == false){
 $this->_where->addContent(" AND ");
 }
 }
 public function editStatement($table){
 switch($this->sqlType){
 case 'UPDATE':
 $edit = $this->sqlUpdate($table);
 break;
 case 'INSERT':
 $edit = $this->sqlInsert($table);
 break;
 default:
 }
 return $edit;
 }

 protected function sqlInsert($table){
 $this->addContent(" INSERT INTO ".$table." ( ");
 $this->addContent($this->_cols->getContent());
 $this->addContent(") VALUES (");
 $this->addContent($this->_values->getContent());
  $this->addContent(") ");
 return $this->getContent();
 }

 protected function sqlUpdate($table){
 $this->addContent(" UPDATE ".$table." SET ");
 $this->addContent($this->_values->getContent());
 if ($this->useWhere == true){
 $this->addContent($this->_where>getContent());
 }
 return $this->getContent();
 }

 }


 
?>
