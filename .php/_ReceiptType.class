<?php 

class ReceiptType extends __EntityType{
	protected $__MyClassName = 'ReceiptType';

  	protected $_titleEntity = 'Receipt Type';
	
	private $sql;

	public function __construct($mode = 'VIEW', $id = 0, $idParent = 0){
		parent::__construct($mode, $id, $idParent);

		$this->sql = new ReceiptTypeSQL;
	}
	
		
	
	protected function setPageMenu(){
		$menuType = 'LIST';
		$menuStyle = 'menu';
		$typesL = new ReceiptTypeLinks($menuType,$menuStyle);
		$menuL = new MenuLinks($menuType,$menuStyle);
		
		$menu = $typesL->openMenu('section-heading-links');
		$menu .= $menuL->linkReference();
		$menu .= $typesL->resetMenu();
		if ($this->pageMode == 'VIEW'){
			$menu .= $typesL->detailEditHref($this->id);
		} elseif ($this->pageMode == 'EDIT'){
			$menu .= $typesL->detailViewHref($this->id);
		}
		$menu .= $typesL->listingHref();		
		$menu .= $typesL->closeMenu();
		$this->_pageMenu = $menu;
	}
	
	
	public function options(
		$selectedValue = '0', 
		$idName = 'receiptTypeId', 
		$disabled = 'false',
		$showLink = false,
		$changeJS = NULL){
	
		$sql = $this->sql->options($selectedValue, $disabled);
		
		$defaultValue = '0';
		$defaultCaption = '-select Receipt Type';
		$allOptions = getSelectOptionsSQL($sql,$selectedValue,$disabled,$defaultValue,$defaultCaption);		
		
		$select = getSelectList($idName,$allOptions,'none',$disabled,$changeJS);
		if ($showLink == true){
			$l = new ReceiptTypeLinks;	
			$links =$l->detailViewEditHref($selectedValue);
			$select .= $links;
		}
		return $select;
	}	
	
	
	public function editForm(){
		if ($this->pageMode == 'ADD'){
			$legend = 'Add Receipt Type';
		} else {
			$legend = 'Edit Receipt Type';
		}
		$entity = 'receipt-type';
		$c = new ProjectTypeLinks;
		$contextMenu = $c->formatToggleLink('formOptional','+Options');
		$form = openEditForm($entity,$legend,'pr_ReceiptType_Save.php',$contextMenu);
		

		//formRequired fields	
		$fields = inputFieldName($entity,$this->name,'name','Receipt Type');

		$fields .= inputFieldNumber($entity,$this->displayOrder,'displayOrder','Display Order');
		
		$fields .= inputFieldHighlightStyle($entity,$this->highlightStyle,'highlightStyle');
			
		$formRequired = $fields;
			
		//formOptional fields
		$fields = inputFieldDescription($entity,$this->description,'description');

		$fields .= inputFieldNotes($entity,$this->notes,'notes');
		
		$formOptional = $fields;
		
		$hidden = getHiddenInput('mode', $this->pageMode);
		$hidden .= getHiddenInput('id', $this->id);
		$input = getSaveChangesResetButtons();
		$formSubmit = $hidden.$input;
		
		$form .= closeEditForm($entity,$formRequired,$formOptional,$formSubmit);
		return $form;
	}
	
	public function saveUpdate(){
	

			$sql = " UPDATE receipt_types AS p ";
			$sql .= " SET ";
			$sql .= " p.name = '".$this->name."', ";
			$sql .= " p.description = '".$this->description."', ";
			$sql .= " p.updated = CURRENT_TIMESTAMP, ";
			$sql .= " p.display_order = ".$this->displayOrder.", ";			
			$sql .= " p.highlight_style = '".$this->highlightStyle."', ";
			$sql .= " p.notes = '".$this->notes."' ";
			$sql .= " WHERE p.id = ".$this->id."  ";			
			$result = dbRunSQL($sql);
			
	}
		
	public function saveInsert(){

			$sql = " INSERT INTO receipt_types ";
			$sql .= " (name, ";
			$sql .= " created, ";
			$sql .= " updated, ";
			$sql .= " description, ";
			$sql .= " display_order, ";			
			$sql .= " highlight_style, ";
			$sql .= " notes) ";
			$sql .= " VALUES (";
			$sql .= "'".$this->name."', ";
			$sql .= " CURRENT_TIMESTAMP, ";
			$sql .= " CURRENT_TIMESTAMP, ";
			$sql .= "'".$this->description."', ";
			$sql .= " ".$this->displayOrder.", ";			
			$sql .= "'".$this->highlightStyle."', ";
			$sql .= "'".$this->notes."') ";
			$result = dbRunSQL($sql);
			
			$this->id = dbInsertedId();
		
	
	}
	
} 
?>
