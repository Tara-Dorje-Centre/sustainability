<?php 

class siteSettingsFields extends _entityFields{
	 public $siteTitle = 'MyProjects';
	 public $siteUrl = 'MyUrl';
	 public $loginNotice = '';
	 public $organizationUrl = 'MyOrganizationUrl';	
	 public $organization = 'MyOrganization';
	 public $organizationDescription = 'AboutMyOrganization';
	 public $contactName = 'MySiteContact';
	 public $contactEmail = 'MySiteContact@MyOrganization';
	 public $showPublicSite = 'no';
	 public $showCostReports = 'no';
	 public $showRevenueReports = 'no';
	 public $publicFillColor;
	 public $publicSiteColor;
	 public $publicPageColor;
	 public $publicMenuColor;
	 public $publicMenuColorHover;
	 public $publicTextColor;
	 public $publicTextColorHover;			
	 public $publicFontFamily;
	 public $publicFontSizeTitle = 20;
	 public $publicfontSizeHeading = 16;
	 public $publicFontSizeMenu = 12;
	 public $publicFontSizeText = 12;
	 
	


	public function __construct(){



	}
	
	public function setRow($row){
		parent::setRow($row);
		
		 $this->siteTitle = $row["site_title"];
		 $this->name = $this->siteTitle;
		 $this->siteUrl = $row["site_url"];
		 $this->loginNotice = $row["login_notice"];
		 $this->organization = $row["organization"];
		 $this->organizationUrl = $row["organization_url"];
		 $this->organizationDescription = $row["organization_description"];
		 $this->contactName = $row["contact_name"];
		 $this->contactEmail = $row["contact_email"];
		 $this->showPublicSite = $row["show_public_site"];
		 $this->showCostReports = $row["show_cost_reports"];
		 $this->showRevenueReports = $row["show_revenue_reports"];
		 $this->publicFillColor = $row["public_fill_color"];
		 $this->publicSiteColor = $row["public_site_color"];
		 $this->publicPageColor = $row["public_page_color"];
		 $this->publicMenuColor = $row["public_menu_color"];
		 $this->publicMenuColorHover = $row["public_menu_color_hover"];
		 $this->publicTextColor = $row["public_text_color"];
		 $this->publicTextColorHover = $row["public_text_color_hover"];
		 $this->publicFontFamily = $row["public_font_family"];
		 $this->publicFontSizeTitle = $row["public_font_size_title"];
		 $this->publicFontSizeHeading = $row["public_font_size_heading"];
		 $this->publicFontSizeMenu = $row["public_font_size_menu"];
		 $this->publicFontSizeText = $row["public_font_size_text"];
		
	}
	
	public function defaults(){
		parent::defaults();
		
		
		
	}
	
	public function format(){
		parent::format();
		 $this->siteTitle = $this->formatText($this->siteTitle);
		 $this->organization = $this->formatText($this->organization);
		 $this->loginNotice = $this->formatText($this->loginNotice);
	}
	
	public function listHeading(){
		$this->addContent(parent::listHeading(),true);
		
		
		return $this->getContent();
	}
	
	public function listDetail(){
		$this->addContent(parent::listDetail(),true);
		
		
		return $this->getContent();
	}
	
	public function display(){
		$this->addContent(parent::display(),true);
		$this->detailPara('Projects Title', $this->siteTitle);
		$this->detailPara('Projects URL', $this->siteUrl);
		$this->detailPara('Project Login Notice', $this->loginNotice);
		$this->detailPara('Organization', $this->organization);
		$this->detailPara('Org. URL', $this->organizationUrl);
		$this->detailPara('Org. Description', $this->organizationDescription);
		$this->detailPara('Contact Name', $this->contactName);
		$this->detailPara('Contact Email', $this->contactEmail);
		return $this->getContent();
	}
	
	public function getPostVars(){
		parent::getPostVars();
		 $this->siteTitle = $this->postText('siteTitle');
		 $this->siteUrl = $this->postText('siteUrl'); 
		 $this->loginNotice = $this->postText('loginNotice');
		 $this->organization = $this->postText('organization'); 
		 $this->organizationUrl = $this->postText('organizationUrl');
		 $this->organizationDescription = $this->postText('organizationDescription');
		 $this->contactName = $this->postText('contactName'); 		
		 $this->contactEmail = $this->postText('contactEmail');
		 $this->showPublicSite = $this->postText('showPublicSite');
		 $this->showCostReports = $this->postText('showCostReports');
		 $this->showRevenueReports = $this->postText('showRevenueReports'); 		
		 $this->publicFillColor = $this->postText('publicFillColor');
		 $this->publicSiteColor = $this->postText('publicSiteColor');
		 $this->publicPageColor = $this->postText('publicPageColor');
		 $this->publicMenuColor = $this->postText('publicMenuColor');
		 $this->publicMenuColorHover = $this->postText('publicMenuColorHover');
		 $this->publicTextColor = $this->postText('publicTextColor');
		 $this->publicTextColorHover = $this->postText('publicTextColorHover');
		 $this->publicFontFamily = $this->postText('publicFontFamily');
		 $this->publicFontSizeTitle = $this->postText('publicFontSizeTitle');
		 $this->publicFontSizeHeading = $this->postText('publicFontSizeHeading');
		 $this->publicFontSizeMenu = $this->postText('publicFontSizeMenu');
		 $this->publicFontSizeText = $this->postText('publicFontSizeText');
		
	}
}

class siteSettings extends _entity{
	protected $__MyClassName = 'SiteSettings';
	protected $_titleEntity = 'Site Settings';

	public function setHelperClasses(){
		$this->f = new siteSettingsFields();
		$this->links = new siteSettingsLinks();
		$this->sql = new siteSettingsSQL();
	}
	
    // set class properties with record values from database
	public function setDetails(){
		$this->verifySettings();

		$sql = $this->sql->info();
		$result = dbGetResult($sql);
		if($result){
		while ($row = $result->fetch_assoc())
		{		
			$this->f->setRow($row);
		
		}
		$result->close();
		}
		$this->setSessionDetails();	
	}	
	
	public function verifySettings(){
		$sql = $this->sql->count();
		
		$i = dbGetCount($sql, 'count_settings', 0, 'verifySettings');
		if ($i == 0){
			$this->createSettings();	
		}
	}
	
	public function setSessionDetails(){
	//if format happens on setting details for edit
		if (($this->pageMode != 'EDIT') || ($this->pageMode != 'ADD')){
		$this->f->format();
		}
		$_SESSION['site-title'] = $this->f->siteTitle;	
		$_SESSION['site-url'] = $this->f->siteUrl;
		$_SESSION['site-login-notice'] = displayLines($this->f->loginNotice);
		$_SESSION['site-org'] = $this->f->organization;
		$_SESSION['site-org-url'] = $this->f->organizationUrl;
		$_SESSION['site-contact-name'] = $this->f->contactName;
		$_SESSION['site-contact-email'] = $this->f->contactEmail;
		$_SESSION['show-public-site'] = $this->f->showPublicSite;
		$_SESSION['show-cost-reports'] = $this->f->showCostReports;
		$_SESSION['show-revenue-reports'] = $this->f->showRevenueReports;
	}
	
	public function unsetSessionDetails(){
		unset($_SESSION['site-title']);
		unset($_SESSION['site-url']);
		unset($_SESSION['site-login-notice']);
		unset($_SESSION['site-org']);
		unset($_SESSION['site-org-url']);
		unset($_SESSION['site-contact-name']);
		unset($_SESSION['site-contact-email']);
		unset($_SESSION['show-public-site']);
		unset($_SESSION['show-cost-reports']);
		unset($_SESSION['show-revenue-reports']);
	}
	
	protected function setPageMenu(){
		$menuType = 'LIST';
		$menuStyle = 'menu';		
		$settingsL = new SiteSettingsLinks($menuType,$menuStyle);
		$menuL = new MenuLinks($menuType,$menuStyle);

		$menu = $settingsL->openMenu('section-heading-links');
		
		$menu .= $menuL->linkReference();
		$menu .= $settingsL->resetMenu();
		if ($this->pageMode == 'VIEW'){
			$menu .= $settingsL->detailEditHref();
		} elseif ($this->pageMode == 'EDIT'){
			$menu .= $settingsL->detailViewHref();
		}
		$menu .= $settingsL->closeMenu();
		$this->_pageMenu = $menu;
	}
	
	public function afterDisplay(){
		$detail = $this->getPublicSiteStylesFieldset('true');
		return $detail;
	}
	
	private function getPublicSiteStylesFieldset($disabled = 'false'){

		$styles = openFieldset('Public Site Presentation Styles');
		$styles .= openDiv('public-styles','editing-table');
		$input = getColorSelectList($this->f->publicFillColor, 'publicFillColor',$disabled);
		$styles .= captionedInput('Fill Color', $input);		

		$input = getColorSelectList($this->f->publicSiteColor, 'publicSiteColor',$disabled);
		$styles .= captionedInput('Site Color', $input);		

		$input = getColorSelectList($this->f->publicPageColor, 'publicPageColor',$disabled);
		$styles .= captionedInput('Page Color', $input);		

		$input = getColorSelectList($this->f->publicMenuColor, 'publicMenuColor',$disabled);
		$styles .= captionedInput('Menu Color', $input);		

		$input = getColorSelectList($this->f->publicMenuColorHover, 'publicMenuColorHover',$disabled);
		$styles .= captionedInput('Menu Color Hover', $input);		

		$input = getColorSelectList($this->f->publicTextColor, 'publicTextColor',$disabled);
		$styles .= captionedInput('Text Color', $input);		

		$input = getColorSelectList($this->f->publicTextColorHover, 'publicTextColorHover',$disabled);
		$styles .= captionedInput('Text Color Menu Hover', $input);		
		
		$input = getFontSizeSelectList($this->f->publicFontSizeTitle, 'publicFontSizeTitle',$disabled);
		$styles .= captionedInput('Font Size Title px', $input);	

		$input = getFontSizeSelectList($this->f->publicFontSizeHeading, 'publicFontSizeHeading',$disabled);
		$styles .= captionedInput('Font Size Heading px', $input);	
		
		$input = getFontSizeSelectList($this->f->publicFontSizeMenu, 'publicFontSizeMenu',$disabled);
		$styles .= captionedInput('Font Size Menu px', $input);	
		
			
		$input = getFontSizeSelectList($this->f->publicFontSizeText, 'publicFontSizeText',$disabled);
		$styles .= captionedInput('Font Size Text px', $input);	

		$input = getFontFamilySelectList($this->f->publicFontFamily, 'publicFontFamily',$disabled);
		$styles .= captionedInput('FontFamily', $input);	
			
		//add the sample region after the first color select
		$styles .= wrapDiv($this->publicSiteSample(),'public-site-sample','site-sample');

		$styles .= closeDiv();
		$styles .= closeFieldset();
		return $styles;
	}
	
	public function publicSiteSample(){
		
		
		//sample is inserted into the editing td just after the first color select list
		//force a close on the td and reopen a td with rowspan set to all seven selects
		//this inserts the sample neatly beside all select lists
		
		$td = new _td();
		$x = $td->close();
		
		$td = new _td('none','editing-td');
		$td->addAttribute('width', '50%');
		$td->addAttribute('rowspan',11);
		$x .= $td->open();
		
		$style = minHeightPixels(200).setPadding(10).setFontFamily($this->f->publicFontFamily);
		$style .= setFont($this->f->publicFontSizeText,'normal','normal').colorBackground($this->f->publicFillColor);
		$div = new _div();
		$div->setStyle($style);
		$x .= $div->open();

		$style = setPadding(10).colorBackground($this->f->publicSiteColor);
		$div = new _div();
		$div->setStyle($style);
		$x .= $div->open();
		

		$style = setPadding(10).widthPixels(75).setFloat('left');
		$style .= colorBackground($this->f->publicMenuColor).setFont($this->f->publicFontSizeMenu,'normal','normal');
		$div = new _div();
		$div->setStyle($style);
		$x .= $div->open();
		
		
		$style = clearListStyle().clearMarginPadding();
		$list = new _ul();
		$list->setStyle($style);
		$x .= $list->open();
		
		$style = setDisplay('block').colorText($this->f->publicTextColor);
		$li = new _li();
		$li->setStyle($style);
		$x .= $li->wrap('Menu Item');
	
		$style = setDisplay('block').colorText($this->f->publicTextColorHover);
		$style .= colorBackground($this->f->publicMenuColorHover);
		$li = new _li();
		$li->setStyle($style);
		$x .= $li->wrap('Menu Item');
	
		$x .= closeList();
		$x .= closeDiv();
	
		$style = setPadding(10).setMarginCustom('left',100);
		$style .= colorBackground($this->f->publicPageColor).colorText($this->f->publicTextColor);
		$div = new _div();
		$div->setStyle($style);
		$x .= $div->open();
		
		$x .= spanStyled('Titles',setFont($this->f->publicFontSizeTitle,'normal','bold')).br();
		$x .= spanStyled('Headings',setFont($this->f->publicFontSizeHeading,'normal','bold')).br();
		$x .= spanStyled('Content Text'.br().'...',setFont($this->f->publicFontSizeText,'normal','normal')).br();
		$x .= closeDiv();		
		$x .= closeDiv();		
		$x .= closeDiv();

		return $x;		
	}
	
	protected function editForm(){
		if ($this->pageMode == 'ADD'){		
			//$this->setDefaults();
			$legend = 'Add Site Settings';
		} else {
			$legend = 'Edit Site Settings';	
		}

		$entity = 'site-settings';
		$c = new ProjectLinks;
		$contextMenu = $c->formatToggleLink('formOptional','+Options');


		$form = openEditForm($entity,$legend,'sys_SiteSettings_Save.php',$contextMenu);
		
		//start required fields
		$fields = inputFieldName($entity,$this->f->siteTitle,'siteTitle','Projects Title');

		$fields .= inputFieldText($entity,$this->f->siteUrl,'siteUrl','Projects URL',50,255);
				
		$fields .= inputFieldName($entity,$this->f->contactName,'contactName','Contact Name');

		$fields .= inputFieldText($entity,$this->f->contactEmail,'contactEmail','Contact Email',40,100);

		//end required fields
		$formRequired = $fields;

		//start optional fields		
		$fields = inputFieldName($entity,$this->f->organization,'organization','Organization');

		$fields .= inputFieldText($entity,$this->f->organizationUrl,'organizationUrl','Organization URL',50,255);

		$fields .= inputFieldComments($entity,$this->f->organizationDescription,'organizationDescription','Organization Description');


		$input = getSelectYesNo('showCostReports',$this->f->showCostReports);
		$fields .= captionedInput('Show Cost Reports',$input);		

		$input = getSelectYesNo('showRevenueReports',$this->f->showRevenueReports);
		$fields .= captionedInput('Show Revenue Reports',$input);		

		$input = getSelectYesNo('showPublicSite',$this->f->showPublicSite);
		$fields .= captionedInput('Show Public Site',$input);				
		
		$fields .= $this->getPublicSiteStylesFieldset('false');

		$fields .= inputFieldComments($entity,$this->f->loginNotice,'loginNotice','Projects Login Notice',1000);


		//end optional fields (hidden by default)
		$formOptional = $fields;

		
		$hidden = getHiddenInput('mode', $this->pageMode);
		
		$input = getSaveChangesResetButtons();
		$formSubmit = $hidden.$input;
		
		$form .= closeEditForm($entity,$formRequired,$formOptional,$formSubmit);
		return $form;
	}
	
	private function createSettings(){

		
			$sql = " INSERT INTO sitewide_settings ";
			$sql .= " (site_title, ";
			$sql .= " organization, ";
			$sql .= " organization_description, ";
			$sql .= " site_url, ";
			$sql .= " contact_name, ";
			$sql .= " contact_email, ";
			$sql .= " public_fill_color, ";
			$sql .= " public_site_color, ";
			$sql .= " public_page_color, ";
			$sql .= " public_menu_color, ";
			$sql .= " public_menu_color_hover, ";
			$sql .= " public_text_color, ";
			$sql .= " public_text_color_hover, ";
			$sql .= " public_font_family, ";
			$sql .= " public_font_size_title, ";
			$sql .= " public_font_size_heading, ";
			$sql .= " public_font_size_menu, ";
			$sql .= " public_font_size_text, ";
			$sql .= " show_public_site, ";
			$sql .= " show_cost_reports, ";
			$sql .= " show_revenue_reports ";
			$sql .= " ) ";
			$sql .= " VALUES (";
			$sql .= " '".$this->f->siteTitle."', ";
			$sql .= " '".$this->f->organization."', ";
			$sql .= " '".$this->f->organizationDescription."', ";
			$sql .= " '".$this->f->siteUrl."', ";
			$sql .= " '".$this->f->contactName."', ";
			$sql .= " '".$this->f->contactEmail."', ";
			$sql .= " '".$this->f->publicFillColor."', ";
			$sql .= " '".$this->f->publicSiteColor."', ";
			$sql .= " '".$this->f->publicPageColor."', ";
			$sql .= " '".$this->f->publicMenuColor."', ";
			$sql .= " '".$this->f->publicMenuColorHover."', ";
			$sql .= " '".$this->f->publicTextColor."', ";
			$sql .= " '".$this->f->publicTextColorHover."', ";
			$sql .= " '".$this->f->publicFontFamily."', ";			
			$sql .= " ".$this->f->publicFontSizeTitle.", ";
			$sql .= " ".$this->f->publicFontSizeHeading.", ";
			$sql .= " ".$this->f->publicFontSizeMenu.", ";
			$sql .= " ".$this->f->publicFontSizeText.", ";			
			$sql .= " '".$this->f->showPublicSite."', ";			
			$sql .= " '".$this->f->showCostReports."', ";			
			$sql .= " '".$this->f->showRevenueReports."' ";			
			$sql .= " ) ";
			
		$result = dbRunSQL($sql);

	}


	protected function saveUpdate(){
			

			$sql = " UPDATE sitewide_settings AS sw ";
			$sql .= " SET ";
			$sql .= " sw.site_title = '".$this->f->siteTitle."', ";
			$sql .= " sw.site_url = '".$this->f->siteUrl."', ";
			$sql .= " sw.login_notice = '".$this->f->loginNotice."', ";
			$sql .= " sw.organization = '".$this->f->organization."', ";
			$sql .= " sw.organization_url = '".$this->f->organizationUrl."', ";
			$sql .= " sw.organization_description = '".$this->f->organizationDescription."', ";
			$sql .= " sw.contact_name = '".$this->f->contactName."', ";
			$sql .= " sw.contact_email = '".$this->f->contactEmail."', ";
			$sql .= " sw.public_fill_color = '".$this->f->publicFillColor."', ";
			$sql .= " sw.public_site_color = '".$this->f->publicSiteColor."', ";
			$sql .= " sw.public_page_color = '".$this->f->publicPageColor."', ";
			$sql .= " sw.public_menu_color = '".$this->f->publicMenuColor."', ";
			$sql .= " sw.public_menu_color_hover = '".$this->f->publicMenuColorHover."', ";
			$sql .= " sw.public_text_color = '".$this->f->publicTextColor."', ";
			$sql .= " sw.public_text_color_hover = '".$this->f->publicTextColorHover."', ";
			$sql .= " sw.public_font_family = '".$this->f->publicFontFamily."', ";			
			$sql .= " sw.public_font_size_title = ".$this->f->publicFontSizeTitle.", ";			
			$sql .= " sw.public_font_size_heading = ".$this->f->publicFontSizeHeading.", ";			
			$sql .= " sw.public_font_size_menu = ".$this->f->publicFontSizeMenu.", ";			
			$sql .= " sw.public_font_size_text = ".$this->f->publicFontSizeText.", ";			
			$sql .= " sw.show_public_site = '".$this->f->showPublicSite."', ";
			$sql .= " sw.show_cost_reports = '".$this->f->showCostReports."', ";
			$sql .= " sw.show_revenue_reports = '".$this->f->showRevenueReports."' ";

			$result = dbRunSQL($sql);
		
			$this->f->setSessionDetails();
		
	
	}
	
}
?>
