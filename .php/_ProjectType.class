<?php 

class ProjectType extends __EntityType{
protected $__MyClassName = 'ProjectType';
   
    protected $_titleEntity = 'Project Type';
   
	private $sql;

	public function __construct($mode = 'VIEW', $id = 0, $idParent = 0){
		parent::__construct($mode, $id, $idParent);
		$this->sql = new ProjectTypeSQL;
	}
	
	protected function setPageMenu(){
		$menuType = 'LIST';
		$menuStyle = 'menu';
		$typesL = new ProjectTypeLinks($menuType,$menuStyle);
		$menuL = new MenuLinks($menuType,$menuStyle);
		
		$menu = $typesL->openMenu('section-heading-links');
		$menu .= $menuL->linkReference();
		$menu .= $typesL->resetMenu();
		if ($this->pageMode == 'VIEW'){
			$menu .= $typesL->detailEditHref($this->id);
		} elseif ($this->pageMode == 'EDIT'){
			$menu .= $typesL->detailViewHref($this->id);
		}
		$menu .= $typesL->listingHref();		
		$menu .= $typesL->closeMenu();
		$ths->_pageMenu = $menu;
	}
	
	public function options(
		$selectedValue = 0,
		$idName = 'projectTypeId', 
		$disabled = 'false',
		$showLink = true,
		$onChangeJS = NULL){
			
		$this->echoState(true,'selectList');
			
		$sql = $this->sql->options($selectedValue, $disabled);
		
		$defaultValue = '0';
		$defaultCaption = '-select Project Type';
		$allOptions = getSelectOptionsSQL($sql,$selectedValue,$disabled,$defaultValue,$defaultCaption);		

		$select = getSelectList($idName,$allOptions,'none',$disabled,$onChangeJS);
		if ($showLink === true){
			$l = new ProjectTypeLinks;	
			$links =$l->detailViewEditHref($selectedValue);
			$select .= $links;
		}
		return $select;
	}	
	
	protected function setAddDefaults(){
	
	}
	
	public function editForm(){
	
		$this->setAddDefaults();
		
		$this->echoState(true,'editForm');
		
		if ($this->pageMode == 'ADD'){

			$legend = 'Add Project Type';
		} else {
			$legend = 'Edit Project Type';
		}
		$entity = 'project-type';
		$c = new ProjectTypeLinks;
		$contextMenu = $c->formatToggleLink('formOptional','+Options');
		$form = openEditForm($entity,$legend,'pr_ProjectType_Save.php',$contextMenu);


		//formRequired fields	
		$fields = inputFieldName($entity,$this->name,'name','Project Type');

		$fields .= inputFieldNumber($entity,$this->displayOrder,'displayOrder','Display Order');

		$fields .= inputFieldHighlightStyle($entity,$this->highlightStyle,'highlightStyle');

			
		//end required fields
		$formRequired = $fields;	
			
		//formOptional fields
		$fields = inputFieldDescription($entity,$this->description,'description');
		
		

		$fields .= inputFieldNotes($entity,$this->notes,'notes');

		//end optional fields
		$formOptional = $fields;

		//formSubmit fields
		$hidden = getHiddenInput('mode', $this->pageMode);
		$hidden .= getHiddenInput('projectTypeId', $this->id);
		$input = getSaveChangesResetButtons();
		$formSubmit = $hidden.$input;
		
		$form .= closeEditForm($entity,$formRequired,$formOptional,$formSubmit);
		return $form;
	}
	
	protected function saveUpdate(){
	
			$sql = " UPDATE project_types AS p ";
			$sql .= " SET ";
			$sql .= " p.name = '".$this->name."', ";
			$sql .= " p.description = '".$this->description."', ";
			$sql .= " p.updated = CURRENT_TIMESTAMP, ";
			$sql .= " p.highlight_style = '".$this->highlightStyle."', ";
			$sql .= " p.display_order = ".$this->displayOrder.", ";
			$sql .= " p.notes = '".$this->notes."' ";
			$sql .= " WHERE p.id = ".$this->id."  ";		
				
			$result = dbRunSQL($sql);
			
	}
			
	protected function saveInsert(){
			$sql = " INSERT INTO project_types ";
			$sql .= " (name, ";
			$sql .= " created, ";
			$sql .= " updated, ";
			$sql .= " description, ";
			$sql .= " highlight_style, ";
			$sql .= " display_order, ";
			$sql .= " notes) ";
			$sql .= " VALUES (";
			$sql .= "'".$this->name."', ";
			$sql .= " CURRENT_TIMESTAMP, ";
			$sql .= " CURRENT_TIMESTAMP, ";
			$sql .= "'".$this->description."', ";
			$sql .= "'".$this->highlightStyle."', ";
			$sql .= " ".$this->displayOrder.", ";
			$sql .= "'".$this->notes."') ";
			
			$result = dbRunSQL($sql);
			
			$this->id = dbInsertedId();
	}
	
} 
?>
