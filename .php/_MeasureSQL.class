<?php 

class MeasureSQL{
function columnsMeasures(){
$c = " m.id, ";
$c .= " m.task_id, ";
$c .= " m.location_id, ";
$c .= " m.name, ";
$c .= " m.description, ";
$c .= " m.date_reported, ";
$c .= " m.updated, ";
$c .= " m.value, ";
$c .= " m.measure_type_unit_id, ";
$c .= " m.notes, ";
$c .= " mtu.measure_type, ";
$c .= " mtu.unit_type, ";
$c .= " mtu.unit_symbol ";
return $c;	
}
public function infoMeasure($measureId){
$q = " SELECT ";	
$q .= $this->columnsMeasures();
$q .= " FROM measures AS m JOIN measure_type_units_v as mtu ";
$q .= " ON m.measure_type_unit_id = mtu.measure_type_unit_id ";
$q .= " WHERE  ";
$q .= " m.id = '".$measureId."' ";
return $q;
}
public function listMeasuresByTask($selectedTaskId, $resultPage, $rowsPerPage){
$q = " SELECT  ";
$q .= $this->columnsMeasures();
$q .= " FROM measures AS m JOIN measure_type_units_v as mtu ";
$q .= " ON m.measure_type_unit_id = mtu.measure_type_unit_id ";
$q .= " WHERE  ";
$q .= " m.task_id = ".$selectedTaskId." ";
$q .= " ORDER BY ";
$q .= " m.date_reported, m.measure_type_unit_id, m.id ";
$q .= sqlLimitClause($resultPage, $rowsPerPage);
return $q;
}
public function countMeasuresByTask($selectedTaskId){
$q = " SELECT  ";
$q .= " COUNT(*) total_measures";
$q .= " FROM measures AS m ";
$q .= " WHERE  ";
$q .= " m.task_id = ".$selectedTaskId." ";
return $q;
}

}
?>
