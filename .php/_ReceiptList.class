<?php 

class ReceiptList extends __EntityList{
protected $__class = 'ReceiptList';

/*
	   		$this->echoState(true, 'setDetails');
	   $this->echoState(true, 'display');
	   		$this->echoState(true, 'editForm');
*/

	public $task;
	private $displayProject = 'TASK';
	private $approved = 'no';
	public $costActual = 0;
	//public $costEstimated = 0;
	private $sql;

	public function __construct($mode = 'VIEW', $id = 0, $idParent = 0){
		parent::__construct($mode, $id, $idParent);
		$this->task = new Task($this->pageMode, $this->idParent);
		$this->sql = new ReceiptSQL;
	}
	
	public function setDisplay($display = 'TASK'){
		$this->displayProject = $display;
	}
	
	public function setApproved($approved = 'no'){
		$this->approved = $approved;
	}
	
	public function setDetails(){
		$this->task->setDetails();
		$this->setFoundCount();
		$this->setSummary();
	}
		
	protected function setPageTitle(){

		if ($this->displayProject == 'TASK'){
			$title = $this->task->project->name.br();
			$title .= 'Task: '.$this->task->name.br();
			if ($this->task->receiptsAuthProject == 'yes'){
				$title .= 'Receipts Approved = '.$this->costActual;
			} else {
				$title .= 'Receipts Estimated';
			}
		} elseif ($this->displayProject == 'PROJECT'){
			$title = $this->task->project->name.br();	
			$title .= 'Receipts Approved = '.$this->costActual;
		}

		$this->_pageTitle = $title;	
	}	

	protected function setPageMenu(){
		$menuType = 'LIST';
		$menuStyle = 'menu';
		
		$projects = new ProjectLinks($menuType,$menuStyle);
		$tasks = new TaskLinks($menuType,$menuStyle);
		$rL = new ReceiptLinks($menuType,$menuStyle);
					
		$menu = $projects->openMenu('section-heading-links');
		
		$menu .= $projects->detailViewHref($this->task->project->id);			
		if ($this->task->project->receiptsCount > 0){
			$menu .= $rL->linkProjectReceipts($this->task->project->id);
		}
		if ($this->displayProject == 'TASK'){
			$menu .= $projects->resetMenu();	
			$menu .= $tasks->detailViewHref($this->task->id);
			if ($this->found > 0){
				$menu .= $rL->linkTaskReceipts($this->task->id);		
			}
			$menu .= $projects->resetMenu();	
			$menu .= $rL->detailAddHref($this->task->id);
		}
		$menu .= $projects->closeMenu();	
		$this->_pageMenu = $menu;			
	}	
	
	public function setFoundCount(){
		if ($this->displayProject == 'PROJECT'){
			$sql = $this->sql->countReceiptsByProject($this->task->project->id, $this->approved);
		} else {
			$sql = $this->sql->countReceiptsByTask($this->task->id);
		}
		$this->found = dbGetCount($sql, 'total_receipts');
	}
	
	private function setSummary(){
		if ($this->displayProject == 'PROJECT'){
			$sql = $this->sql->summarizeReceiptsByProject($this->task->project->id, $this->approved);
		} else {
			$sql = $this->sql->summarizeReceiptsByTask($this->task->id);
		}

		$result = dbGetResult($sql);
		if($result){
		while ($row = $result->fetch_assoc())
		{
			$this->costActual = $row["sum_cost_actual"];
		}
		$result->close();		
		}	
	}
	
		
	public function getListing($pagingBaseLink = 'USE_LISTING'){
		if ($this->displayProject == 'PROJECT'){
			$id = $this->task->project->id;
			$sql = $this->sql->listReceiptsByProject($id, $this->resultPage, $this->perPage, $this->approved);		
		} elseif ($this->displayProject == 'TASK'){
			$sql = $this->sql->listReceiptsByTask($this->task->id,$this->resultPage,$this->perPage);		
		}
		
		$receiptL = new ReceiptLinks;
		$taskL = new TaskLinks;
				
		if ($pagingBaseLink == 'USE_LISTING'){
			$base = $receiptL->listing($this->task->id, $this->task->project->id,$this->displayProject,$this->approved);
		} else { 
			$base = $pagingBaseLink;
		}
		$pagingLinks = $receiptL->listingPaged($base,$this->found,$this->resultPage,$this->perPage);		
		
		$r = new Receipt('ADD', 0, $this->task->id);

		$quickEdit = $r->editForm();
		$list = openDisplayList('receipt','Receipts',$pagingLinks,$quickEdit);

		$heading = '';
		if ($this->displayProject == 'PROJECT'){
			$heading = wrapTh('Task');	
		}
		$heading .=  wrapTh('Receipt');
		$heading .= wrapTh('Type');
		$heading .=  wrapTh('Date Reported');
		$heading .=  wrapTh('Received By');
		$heading .= wrapTh('Qty Units');
		$heading .=  wrapTh('Qty');
		$heading .=  wrapTh('Unit Amount');
		$heading .=  wrapTh('Amount Actual');
		$heading .= wrapTh('Received From');
		$list .=  wrapTr($heading);

		$result = dbGetResult($sql);
		if($result){
		while ($row = $result->fetch_assoc())
		{	
			$m = new Receipt;
			$m->id = $row["id"];
			$m->task->id = $row["task_id"];
			$m->task->name = $row["task_name"];
			$m->activityId = $row["activity_id"];
			$m->name = stripslashes($row["name"]);
			$m->typeName = stripslashes($row["type_name"]);
			//$m->description = stripslashes($row["description"]);
			$m->dateReported = $row["date_reported"];
			$m->receivedBy = stripslashes($row["received_by"]);
			$m->receivedFrom = stripslashes($row["received_from"]);
			$m->updated = $row["updated"];	
			$m->quantityUnitMeasureName = stripslashes($row["qty_unit_measure_name"]);
			$m->quantity = $row["quantity"];	
			$m->costActual = $row["cost_actual"];
			$m->costUnit = $row["cost_unit"];
			//$m->notes = stripslashes($row["notes"]);
			$cssItem = stripslashes($row["highlight_style"]);

			$m->formatForDisplay();
			
			$detail = '';
			if ($this->displayProject == 'PROJECT'){
				$link = $taskL->detailViewEditHref($m->task->id, $m->task->name);
				$detail = wrapTd($link);
			}
			$link = $receiptL->detailViewEditHref($m->id,$m->name);
			$detail .= wrapTd($link);
			$detail .= wrapTd($m->typeName);			
			$detail .= wrapTd($m->dateReported);
			$detail .= wrapTd($m->receivedBy);
			$detail .= wrapTd($m->quantityUnitMeasureName);
			$detail .= wrapTd($m->quantity);
			$detail .= wrapTd($m->costUnit);
			$detail .= wrapTd($m->costActual);
			$detail .= wrapTd($m->receivedFrom);

			$list .=  wrapTr($detail, $cssItem);
		}
		$result->close();
		}
		
		$list .= closeDisplayList();
		return $list;
		
	}
}
?>
