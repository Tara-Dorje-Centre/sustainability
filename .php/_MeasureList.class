<?php 

class MeasureList{
	public $found = 0;
	public $resultPage = 1;
	public $perPage = 10;
	public $task;
	private $sql;
	
	public function __construct(){
		$this->task = new Task;
		$this->sql = new MeasureSQL;
	}
	
	public function setDetails($taskId, $resultPage = 1, $resultsPerPage = 10){
		$this->task->id = $taskId;	
		$this->resultPage = $resultPage;
		$this->perPage = $resultsPerPage;
		
		$this->task->setDetails($this->task->id, 0, 'VIEW');
		$this->setFoundCount();
	}
		
	public function pageTitle(){
		$title = openDiv('section-heading-title','none');
		$title .= $this->task->project->name.br();
		$title .= 'Task: '.$this->task->name;
		$title .= closeDiv();
		return $title;	
	}	

	public function pageMenu(){
		$menuType = 'LIST';
		$menuStyle = 'menu';
		
		$projects = new ProjectLinks($menuType,$menuStyle);
		$tasks = new TaskLinks($menuType,$menuStyle);
		$measures = new MeasureLinks($menuType,$menuStyle);
					
		$menu = $projects->openMenu('section-heading-links');
		

		$menu .= $tasks->detailViewHref($this->task->id);
		$menu .= $projects->detailViewHref($this->task->project->id);
		
		$menu .= $projects->resetMenu();
		
		$menu .= $measures->detailAddHref($this->task->id);
		$menu .= $measures->listingHref($this->task->id);		
		
		$menu .= $projects->closeMenu();	
		return $menu;			
	}	
	
	public function getPageHeading(){
		$heading = $this->pageTitle();
		$heading .= $this->pageMenu();
		return $heading;
	}	
	
	private function setFoundCount(){
		$sql = $this->sql->countMeasuresByTask($this->task->id);
		$this->found = dbGetCount($sql, 'total_measures');
	}
		
		
		
	public function printPage(){
		
		$heading = $this->getPageHeading();
		$details = $this->getPageDetails();

		$site = new _SiteTemplate;
		$site->setSiteTemplateDetails($heading, $details);
		$site->printSite();
		
	}

	public function getPageDetails(){
	
		$details = $this->getListing();
		return $details;
		
	}
		
	public function getListing($pagingBaseLink = 'USE_LISTING'){
		$sql = $this->sql->listMeasuresByTask($this->task->id,$this->resultPage,$this->perPage);

		
		$ml = new MeasureLinks;		
		if ($pagingBaseLink == 'USE_LISTING'){
			$base = $ml->listing($this->task->id);
		} else { 
			$base = $pagingBaseLink;
		}
		$pagingLinks = $ml->listingPaged($base,$this->found,$this->resultPage,$this->perPage);		
		$m = new Measure;
		$m->setDetails(0,$this->task->id,'ADD');
		$quickEdit = $m->editForm();
		$list = openDisplayList('measure','Measures',$pagingLinks,$quickEdit);

		$heading =  wrapTh('Measure Type');
		$heading .=  wrapTh('Value');
		$heading .=  wrapTh('Name');
		$heading .=  wrapTh('Description');
		$heading .=  wrapTh('Date Reported');

		$list .=  wrapTr($heading);


		$result = dbGetResult($sql);
		if($result){
	  	while ($row = $result->fetch_assoc())
		{	
			$m = new Measure;
			$m->id = $row["id"];
			$m->name = stripslashes($row["name"]);
			$m->measureType = stripslashes($row["measure_type"]);
			$m->unitSymbol = stripslashes($row["unit_symbol"]);
			$m->unitType = stripslashes($row["unit_type"]);
			$m->value = $row["value"];
			$m->dateReported = $row["date_reported"];
			$m->description = stripslashes($row["description"]);
			$m->formatForDisplay();
			
			$link = $ml->detailViewEditHref($m->id,$m->getMeasureTypeAndUnitSymbol());
			$detail =  wrapTd($link);			
			$detail .=  wrapTd($m->value);
			$detail .= wrapTd($m->name);
			$detail .=  wrapTd($m->description);
			$detail .=  wrapTd($m->dateReported);
			
			$list .=  wrapTr($detail);
		}
		$result->close();
		}
		
		$list .= closeDisplayList();
		return $list;
	}
}
?>
