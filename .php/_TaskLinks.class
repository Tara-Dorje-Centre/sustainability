<?php 

class TaskLinks extends _Links {
	public function __construct($menuType = 'DIV',$styleBase = 'menu'){
		parent::__construct($menuType,$styleBase);
	}
	public function listingHref($projectId,$caption = 'ProjectTasks',$periodicTasks = 'NO'){
		$link = $this->listing($projectId,$periodicTasks);
		$href = $this->formatHref($caption,$link);
		return $href;	
	}
	private function detailHref($pageAction = 'VIEW', $taskId = 0, $projectId = 0, $caption = 'Task'){
		$link = $this->detail($pageAction,$taskId,$projectId);
		$href = $this->formatHref($caption,$link);
		return $href;	
	}
	public function listing($projectId,$periodicTasks = 'NO'){
		$link = 'pr_Task_List.php'.'?projectId='.$projectId;
		if ($periodicTasks != 'NO'){
			$link .= '&periodicTasks='.$periodicTasks;
		}
		return $link;
	}
	public function listingPaged($baseLink,$found, $resultPage, $perPage){
		$l = $baseLink.'&resultsPage=';
		$ls = $this->getPagedLinks($l, $found,$perPage,$resultPage);
		return $ls;
	}
	public function detail($pageAction, $taskId, $projectId = 0){
		$link = 'pr_Task_Detail.php?pageAction='.$pageAction;
		if ($projectId != 0){
			$link .= '&projectId='.$projectId;
		} 
		if ($taskId != 0){
			$link .= '&taskId='.$taskId;
		}
		return $link;
	}
	public function detailAddHref($projectId,$caption = '+Task'){
		$l = $this->detailHref('ADD',0,$projectId,$caption);
		return $l;	
	}
	public function detailViewHref($taskId,$caption = 'ViewTask'){
		$l = $this->detailHref('VIEW',$taskId,0,$caption);
		return $l;	
	}
	public function detailEditHref($taskId,$caption = 'EditTask'){
		$l = $this->detailHref('EDIT',$taskId,0,$caption);
		return $l;	
	}
	public function detailCopyHref($taskId,$caption = 'CopyTask'){
		$l = $this->detailHref('COPY',$taskId,0,$caption);
		return $l;	
	}

	public function detailViewEditHref($taskId = 0, $viewCaption = 'Task'){
		$links = '';
		if ($taskId != 0){
			$links .= $this->detailViewHref($taskId,$viewCaption);
			$links .= $this->detailEditHref($taskId,'#'); 
			//$links .= $this->detailCopyHref($taskId);
		}
		return $links;
	}	
	public function linkPeriodicTasksOpen(){
		return $this->listingHref(-1,'To Do','INCOMPLETE');
	}
	public function linkPeriodicTasksClosed(){
		return $this->listingHref(-1,'Done','COMPLETE');		
	}
	public function linksPeriodicTasks($showClosed = false){
//		$menu = $this->formatTextItem('PeriodicTasks:');
		$menu = $this->linkPeriodicTasksOpen();
		if ($showClosed == true){
			$menu .= $this->linkPeriodicTasksClosed();
		}
		return $menu;	
	}
}
?>
