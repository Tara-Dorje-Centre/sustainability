<?php 

 interface Ifieldset{
 	public function setRow($row);
 	public function format();
 	public function defaults();
 	public function listHeading();
 	public function listDetail();
 	public function display();
	public function readPost();
	public function setEnv(string $env = 'POST');
 }
 
abstract class _fieldset extends _contentWriter 
implements Ifieldset, Iecho, IcontentWriter{

	public $id;
	public $name;		
	public $created;
    public $updated;
	public $description;
	public $highlight;
	
	
    public function __construct(){
    	$this->id = new _numberField('id','post-id','Id',true);
    	$this->name = new _textField('name','post-name','Name',true);
    	$this->description = new _textField('description','post-description','Description',true);
		$this->updated = new _dateField('updated','not-used','Updated',true);
    	$this->created = new _dateField('created','not-used','Created',true);
        $this->highlight = new _textField('highlight_style','post-highlight','Highlight',true);
    }
    
    protected function reset(){
    	$this->id->reset(0);
		$this->name->reset('');
		$this->description->reset('');
		$this->created->reset('');
		$this->updated->reset('');
		$this->highlight->reset('none');
		
    }
    public function setEnv(string $env = 'POST'){
        $this->id->setEnv($env);
		$this->name->setEnv($env);
		$this->description->setEnv($env);
		$this->created->setEnv($env);
		$this->updated->setEnv($env);
		$this->highlight->setEnv($env);
    }
	public function setRow($row){
		$this->reset;
		$this->id->fetch($row);
		$this->name->fetch($row);
		$this->description->fetch($row);
		$this->created->fetch($row);
		$this->updated->fetch($row);
		$this->highlight->fetch($row);
	}
	
	public function defaults(){
		$this->reset;
	}
	
	public function format(){
		$this->id->format();
		$this->name->format();
		$this->description->format();
		$this->created->format();
		$this->updated->format();
		$this->highlight->format();
	}
	
	public function display(){
		$this->addContent($this->id->p(),true);
		$this->addContent($this->name->p());
		$this->addContent($this->description->p());
		$this->addContent($this->created->p());
		$this->addContent($this->updated->p());
		$this->addContent($this->highlight->p());	
		return $this->getContent();
	}
	
	public function listHeading(){
		$this->addContent($this->id->th(),true);
		$this->addContent($this->name->th());
		$this->addContent($this->description->th());
		$this->addContent($this->created->th());
		$this->addContent($this->updated->th());
		$this->addContent($this->highlight->th());		
		return $this->getContent();
	}
	
	public function listDetail(){
		$this->addContent($this->id->td(),true);
		$this->addContent($this->name->td());
		$this->addContent($this->description->td());
		$this->addContent($this->created->td());
		$this->addContent($this->updated->td());
		$this->addContent($this->highlight->td());
		return $this->getContent();
	}

	public function readPost(){
		$this->setEnv('POST');
		$this->id->readPost();
		$this->name->readPost();
		$this->description->readPost();
		//$this->created->post();
		//$this->updated->post();
		$this->highlight->readPost();
	}
}



?>
