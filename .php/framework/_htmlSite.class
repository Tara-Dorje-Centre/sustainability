<?php 

interface IhtmlSite{
public function set(string $heading = 'page heading', string $details = 'page details');
}

class _htmlSite extends _htmlPage
implements IhtmlPage, Iecho{
protected $settings;

protected $pageMode = 'VIEW';
public function __construct($mode = 'VIEW'){
$this->echoPrint(true,'begin','__construct','htmlSite');
$this->pageMode = $mode;
$this->settings = new siteSettings($mode);

}
public function set(string $heading = 'page heading', string $details = 'page details'){
$this->echoPrint(true,'begin','set','htmlSite');
	$this->_details = $details;
	$this->_heading = $heading;

	$this->getSiteSettings();
	$this->setOnLoad();
	$this->setStyles();
	$this->setScripts();
	$this->setTitle();
	$this->setLinks();
	$this->setContents();	
	$this->setFooterNotices();
	$this->setFooterLinks();	
	$this->echoPrint(true,'finished','set','htmlSite');
}

protected function getSiteSettings(){
	$this->echoPrint(true,'begin','getSiteSettings','htmlSite');
	$this->settings->setDetails();
}

protected function setOnLoad(){

		if (isset($_SESSION['logged-in']) && $_SESSION['logged-in'] == true){	
			$onLoad = 'none';
		} else {
			$onLoad='displayClientTime();';
		}
		$this->_onLoad = $onLoad;
}


protected function setTitle(){
	//$title = $_SESSION['site-title'];
	$this->_title = $this->settings->f->siteTitle->value();		
}


protected function setLinks(){

	//login check goes here to show content or login screen
	if (!isset($_SESSION['logged-in']) || $_SESSION['logged-in'] == false){
		//user is not logged in, siteContent will display login form, display no links
		$this->_links = '';
	} else {
		$menuType = 'LIST';
		$menuStyle = 'button';
		$m = new MenuLinks($menuType, $menuStyle);
		$p = new ProjectLinks($menuType, $menuStyle);
		$t = new TaskLinks($menuType, $menuStyle);
		$a = new ActivityLinks($menuType, $menuStyle);
		
		$content = $m->openMenu('site');
		if ($this->settings->f->showPublicSite->value == 'yes'){
		//isset($_SESSION['show-public-site']) && $_SESSION['show-public-site'] == 'yes'){
			$content .= $m->formatHref('Library','public.php');	
		}
		
		if (isset($_SESSION['currentView'])){
			if ($_SESSION['currentView'] == 'PERIODIC_TASKS'){
				//user just viewed current open tasks;
				//$content .= $t->linkPeriodicTasksOpen();
			} elseif ($_SESSION['currentView'] == 'MY_CALENDAR'){
				//user just viewed myCalendar;
				$content .= $a->linkMyCalendar();
			} elseif ($_SESSION['currentView'] == 'GROUP_CALENDAR'){
				//user just viewed groupCalendar;
				$content .= $a->linkGroupCalendar();
			} elseif ($_SESSION['currentView'] == 'MY_ACTIVITY'){
				//user just viewed myActivity;
				$content .= $a->linkMyActivities();
			} elseif ($_SESSION['currentView'] == 'GROUP_ACTIVITY'){
				//user just viewed groupActivity;
				$content .= $a->linkGroupActivities();
			}
		}

		//always show current open tasks;
		$content .= $t->linkPeriodicTasksOpen();		
		//always show projects link
		$content .= $p->listingAllProjects(false);
		$content .= $m->detailHref();	
		$content .= $m->logoutHref();
		$content .= $m->closeMenu();
		
		$this->_links = $content;
		
	}
	
}


protected function setContents(){ 

	if (!isset($_SESSION['logged-in']) || $_SESSION['logged-in'] == false){
	$this->echoPrint(true,'not logged-in','setContents','htmlSite');
		$user = new UserLogin('LOGIN-FORM');
		$content = $user->loginForm();
	} else {
	$this->echoPrint(true,'logged-in,setting contents','setConents','htmlSite');
		//section-heading div commented out to allow section-links to float closer to section details
		//  pageHeading contains section-title and section-links div containers
		//  wrap title and links in section-heading div
		//	$s .= openDiv('section-heading');
		$content = $this->_heading;
		//	$s .= closeDiv(); //close section heading

		$content .= openDiv('section-details');
		$content .= $this->_details;
		$content .= closeDiv(); //close section details
	}
	
	$this->_contents = $content;
}


	protected function setFooterNotices(){

		$content = openDiv('login-notices');

		global $sessionTime, $sessionTimeZone;
		$timing = 'Request Time: '.$sessionTime.'(UTC'.$sessionTimeZone.')';
		$content .= wrapDiv($timing, 'display-request-time');
		
		if (isset($_SESSION['login-name'])){
			$loginName = $_SESSION['login-name'];
		} else {
			$loginName = 'Not logged in.';	
		}
		if (isset($_SESSION['client-time-zone'])){
			$timeZone = '@UTC'.$_SESSION['client-time-zone'];	
		} else {
			$timeZone = ' Time Zone set to UTC';	
		}
		$loginName .= $timeZone;	
		$content .= wrapDiv($loginName,'loginName','loginName');
	
		$content .= closeDiv();
		

		$content .= openDiv('site-organization');
		$org = $this->settings->f->organization->value();
		//$_SESSION['site-org'];
		$orgUrl = $this->settings->f->organizationUrl->value();
		//$_SESSION['site-org-url'];
		if ($orgUrl == '' || is_null($orgUrl)){
			$content .= $org;
		} else {
			$content .= getHref($orgUrl, $org, 'menu-links-item', '_blank');
		}
		$content .= closeDiv();

		$this->_footerNotices = $content;
	
	}

	protected function setFooterLinks(){
		$content = getHref('https://sourceforge.net/projects/sustainability','Sustainability','menu-links-item','_blank');
		$this->_footerLinks = $content;	
	}

	protected function setStyles(){
		//use internal stylesheet
		//$content = $this->buildInternalStyles();

		//use external stylesheet
		$content = LinkStylesheet('/css/styles.css');
		$content .= Linkstylesheet('/css/override.css');
		$this->_styles = $content;
		//return $content;
		
	}

	protected function setScripts(){
		$scripts = openScript();	
		//start oputput buffering
		ob_start();
		//include scripts to buffer
		include('./_siteJavascriptFunctions.inc');		
		//clear buffer to local variable
		$scripts .= ob_get_clean();  
		$scripts .= closeScript();
		$this->_scripts = $scripts;
		//return $scripts;
	}
	
}

?>
