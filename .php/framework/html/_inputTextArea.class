<?php
namespace html/forms;

class _textarea extends _element
using inputValueContent, inputCaption, inputValidation, inputDisabled{
	public function __construct($inputName, $inputValue, $maxLength = 1000, $rows = 4, $cols = 60,$tooltip = 'none',$css = 'editing-input-textarea'){
		parent::__construct('textarea',$inputName, $css);
		$this->addAttribute('title',$tooltipText);
		$this->addAttribute('maxlength',$maxLength);
		$this->addAttribute('rows',$rows);
		$this->addAttribute('cols',$cols);
		$this->setValue($inputValue);
	}
	
	public function print(){
		$d= new html/div('ei','edit-input');
		$d->addContent($this->getCaption());
		$d->addContent($this->getValidation());
		$d->addContent(parent::print());
		return $d->print();
	}

}

function getTextArea($inputName, $inputValue, $maxLength = 1000, $rows = 4, $cols = 60,$tooltip = 'none',$disabled = 'false',$css = 'editing-input-textarea'){

	$e = new _textArea($inputName,$inputValue,$maxLength,$rows,$cols,$tooltip,$disabled,$css){
	return $e->print();

}


function inputFieldTextArea(
	$entity, 
	$value, 
	$id = 'textArea', 
	$caption = '',
	$maxLength = 1000,
	$tooltip = NULL, 
	$disabled = 'false',
	$css = 'editing-input-textarea'){

	$input = getTextArea($id, $value, $maxLength,4,80,$tooltip,$disabled,$css);
	$element = captionedInput($caption,$input);
	return $element;
}





?>
