<?php
namespace html/forms;

trait inputValueAttribute{
	public function setValue($inputValue){
		$this->addAttribute('value',$inputValue);
	}
}

trait inputValueContent{
	public function setValue($inputValue){
		$this->setContent($inputValue);
	}
}

trait inputCaption{
	protected $_caption = '';
	protected $_showCaption = false;
	public function setCaption(string $caption = 'none'){
		if ($caption != 'none'){
		$this->_caption = $caption;
		$this->_showCaption = true;
		};
	}
	public function printCaption(){
		if ($this->_showCaption == true){
			$d = new html/div('ic','input-caption');
			$d->addContent($this->_caption);
			$value = $d->print();
		} else {
			$value = '';
		}
		return $value();
	}

}

trait inputValidation{
	protected $_validation = '';
	protected $_showValidation = false;

	public function setValidation(string $validation = 'none'){
		if ($validation != 'none'){
		$this->_validation = $validation;
		$this->_showValidation = true;
		};
	}
	public function printValidation(){
		if ($this->_showValidation == true){
			$d = new html/div('iv','input-validation');
			$d->addContent($this->_validation);
			$value = $d->print();
		} else {
			$value = '';
		}
		return $value();
	}

}

trait inputDisabled{
	public function setDisabled($disabled){
		if ($disabled != 'false'){
			$this->addAttribute('disabled',$disabled);
		}
	}
}
trait inputSize{
	public function setSize($size = 100,$maxLength = 100){
		$this->addAttribute('maxlength',$maxLength);
		$this->addAttribute('size',$size);
	}

}

?>
