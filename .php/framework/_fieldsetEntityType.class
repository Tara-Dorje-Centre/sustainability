<?php 

abstract class _fieldsetEntityType extends _fieldset{
	public $displayOrder;
	public $notes;
	
	
	public function __construct(){
		parent::__construct();
		$this->notes = new _textField('notes','notes','Notes',true);
		$this->displayOrder = new _numberField('display_order','displayOrder','Display Order',true);
		//enable base entity fields
		$this->id->enabled(true);
		$this->name->enabled(true);
		$this->description->enabled(true);
		$this->created->setEnabled(true,true,true);
        $this->updated->setEnabled(true,true,true);
        $this->highlight->enabled(true);
    }
    protected function reset(){
    	parent::reset();
		$this->displayOrder->reset(0);
		$this->notes->reset('');
    }

	public function setRow($row){
		parent::setRow($row);
		$this->displayOrder->fetch($row);
		$this->notes->fetch($row);
		
	}
	
	public function format(){
		parent::format();
		$this->displayOrder->format($row);
		$this->notes->format($row);
	}
	
	public function listHeading(){
		$this->addContent(parent::listHeading(),true);
		$this->addContent($this->displayOrder->th());
		$this->addContent($this->notes->th());
		return $this->getContent();
	}
	
	public function listDetail(){
		$this->addContent(parent::listHeading(),true);
		$this->addContent($this->displayOrder->td());
		$this->addContent($this->notes->td());
		return $this->getContent();
	}
	
	public function display(){
		$this->addContent(parent::display(),true);
		$this->addContent($this->displayOrder->p());
		$this->addContent($this->notes->p());
		return $this->getContent();
		
	}
	
	public function getPostVars(){
		parent::getPostVars();
		$this->displayOrder->post();
		$this->notes->post();
	}

}

?>
