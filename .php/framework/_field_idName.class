<?php 

class _idNameField implements Ifield{
	public  $id;
	public  $name;
	
	public function __construct(string $dbColumnId = 'entity_id', string $postVariable = 'idEntity', string $dbColumnName = 'entity_name',string $caption = 'caption',bool $enable = false){
		$this->id = new _numberField($dbColumnId, $postVariable,'not-used');
		$this->name = new _textField($dbColumnName,'not-used',$caption);
		
		$this->enabled($enable);
	}
	public function enabled(bool $enable = false){
		if ($enable == true){
 	//public function setEnabled( $fetch = ,  $show = ,  $list = ,  $post = ){
			$this->name->setEnabled(true,true,true,false);
			$this->id->setEnabled(true,false,false,true);
		
		} else {
			$this->name->enabled();
			$this->id->enabled();
		}
	}
	public function disable(){
		$this->enabled(false);
	}
 	public function setEnabled(bool $fetch = false, bool $show = false, bool $list = false, bool $post = false){
	
		$this->id->setEnabled($fetch,false,false,$post);
	
		$this->name->setEnabled($fetch,$show,$list,false);
	
	}
	public function set( $value){
	 	$this->id->set($value);
	}
 	public function reset( $default = 0){
 		$this->id->reset($default);
 	 	$this->name->reset('');
 	}
 	public function get(){
 	   	return $this->id->get();
 	}
   	public function value(){
   		return $this->id->value();
   	}
   	public function sqlValue(){
   	
   		return $this->id->sqlValue();
   	}
	public function setShow(string $caption, bool $list = true){
		$this->name->setShow($caption,$list);
	}
	public function setFetch(string $dbColumn){
	//,$dbColumnName){
		$this->id->setFetch($dbColumn);
		//$this->name->setFetch($dbColumnName);
	}
	public function setPost(string $postVariable){
		$this->id->setPost(postVariable);
	}
	public function setFetchName(string $dbColumnName){
	//,$dbColumnName){
		//$this->id->setFetch($dbColumn);
		$this->name->setFetch($dbColumnName);
	}
	

	public function fetch($row){
		$this->id->fetch($row);
		$this->name->fetch($row);
	}
	public function th(){
		return $this->name->tH();
	}
	
 	public function td(){
 		return $this->name->tD();
 	}
 	public function p(){
 		return $this->name->p();
 	}
 	public function post(){
 		$this->id->post();
 	}
 	public function format(){
 	$this->name->format();
 	}
	public function input(string $entity){
		//default usage is free text
		return $this->id->input($entity);
		//$this->value(),$this->postVariable,$this->caption);
	}
	
	public function inputFree(string $entity){
		return $this->id->inputFree($entity);
		//$this->value()); password input should always be blank
	}
	public function inputCaptioned(string $entity, string $input){
		return $this->id->inputCaptioned($entity,$input);
	}
	public function inputChoice(string $entity, string $options){
		return $this->id->inputChoice($entity,$options);
	}
	public function inputHidden(string $entity){
		return $this->id->inputHidden();
	}
}
 
?>
