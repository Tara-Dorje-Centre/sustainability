<?php 


abstract class _fieldsetChild extends _fieldset
implements Ifieldset, Iecho, IcontentWriter{

	public $parent;
	public $type;
		
    public function __construct(){
    	parent::__construct();
    	$this->parent = new _idNameField('parent_id','idParent','parent_name',true);
    	$this->type = new _idNameField('type_id','idType','type_name','Type',true);
   //enable base entity fields
		$this->id->enabled(true);
		$this->name->enabled(true);
		$this->description->enabled(true);
		$this->created->setEnabled(true,true,true);
        $this->updated->setEnabled(true,true,true);
        $this->highlight->enabled(true);
   
    }
    
    protected function reset(){
    	parent::reset();
    	$this->parent->reset(0);
    	$this->type->reset(0);
    }
    
	public function setRow($row){
		parent::setRow($row);
		$this->parent->fetch($row);
		$this->type->fetch($row);
	}
	
	public function format(){
		parent::format();
		$this->parent->format();
		$this->type->format();
	}
	public function display(){;
		$this->addContent(parent::display(),true);
		$this->addContent($this->parent->p());		
		$this->addContent($this->type->p());		
		return $this->getContent();
	}
	
	public function listHeading(){
		$this->addContent(parent::listHeading(),true);
		$this->addContent($this->parent->th());		
		$this->addContent($this->type->th());		
		return $this->getContent();
	}
	
	public function listDetail(){
		$this->addContent(parent::listDetail(),true);
		$this->addContent($this->parent->td());
		$this->addContent($this->type->td());
		return $this->getContent();
	}

	public function getPostVars(){
		parent::getPostVars();
		$this->parent->post();
		$this->type->post();
	}
}

?>
