<?php 
class _userField extends _textField
 implements Ifield, Iecho, IcontentWriter {
 public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input( ){
		$u = new \html\user($this->env->variable(),$this->value(), $this->_caption);
		//return inputFieldUser($this->_entity,$this->value(),$this->env->variable(),$this->_caption);
		return $u->print();
	}

}
class _passwordField extends _textField
 implements Ifield, Iecho, IcontentWriter {
 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
 	private function _inputPassword(){
 	
		$input = getPasswordInput($this->env->variable());
		//$input = getPasswordInput('login-pwd', 10, 50);
		return $this->inputCaptioned($input);
		//$this->value()); password input should always be blank
	}
	public function input( ){
		$p = new \html\password($this->env->variable(),$this->_caption);
	//	return $this->_inputPassword();
		return $p->print();
	}
	public function generate($length = 11) {
		$chars = '.!%^&*#@';
		$clen = mb_strlen($chars);
		$base = md5(microtime());
		$password = substr(base_convert(substr($base,1),16,36),0,$length);
		$len = mb_strlen($password);
		for($i = 0;$i < $len;$i++)
		{
			if(rand(0,1) && 1){
				$password[$i] = strtoupper($password[$i]);
			} elseif(rand(0,2) && 1 && $clen){
				$password[$i] = $chars[rand(0,$clen - 1)];
			}
		}
		return $password;
	}
	

}
class _emailField extends _textField
 implements Ifield, Iecho, IcontentWriter {
 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
 	public function input( ){
 		$n = new \html\name($this->env->variable(),$this->value(),$this->_caption);
	//	return inputFieldName($this->_entity,$this->value(),$this->env->variable(),$this->_caption);
		return $n->print();
	}

}
class _urlField extends _textField
 implements Ifield, Iecho, IcontentWriter {
	public function input( ){
		$i = new \html\url($this->env->variable(),$this->value(),$this->_caption);
	//	'url text','editing-input-url');
		//return inputFieldText($this->_entity,$this->value(),$this->env->variable(),$this->_caption);
		return $i->print();
	}
}

class _nameField extends _textField
 implements Ifield, Iecho, IcontentWriter {
	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input(){
	
	
		$n = new \html\name($this->env->variable(),$this->value(),$this->_caption);
		return $n->print();
		//return inputFieldName($this->_entity,$this->value(),$this->env->variable(),$this->_caption);
	}
}

class _idField extends _numberField
 implements Ifield, Iecho, IcontentWriter {
	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
}

class _descriptionField extends _textField
 implements Ifield, Iecho, IcontentWriter {
 public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input( ){
		$d = new \html\description($this->env->variable(),$this->value(),$this->_caption);
		//return inputFieldDescription($this->_entity,$this->value(),$this->env->variable(),$this->_caption);
		return $d->print();
	}
}
class _notesField extends _textField
 implements Ifield, Iecho, IcontentWriter {
 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input(){
		$n = new \html\notes($this->env->variable(),$this->value(),$this->_caption);
	//	return inputFieldNotes($this->_entity,$this->value(),$this->env->variable(),$this->_caption);
		return $n->print();
	}
}
	
class _commentsField extends _textField
 implements Ifield, Iecho, IcontentWriter {
 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input(){
		$n = new \html\notes($this->env->variable(),$this->value(),$this->_caption);
		//return inputFieldComments($this->_entity,$this->value(),$this->env->variable(),$this->_caption);
		return $n->print();
	}
	
}
	
class _yesNoField extends _textField
 implements Ifield, Iecho, IcontentWriter {
 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input( ){
		$input = \html\getSelectYesNo($this->env->variable(), $this->value());
		return $this->inputChoice($input);
	}
	
}

class _cssColorField extends _textField
 implements Ifield, Iecho, IcontentWriter {
 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input(){
		$input = getColorSelectList($this->value(), $this->env->variable(),'false');
		return $this->inputChoice($input);
	}
}
 
 
 class _cssHighlightField extends _textField
 implements Ifield, Iecho, IcontentWriter {
 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input(){
		$input = \html\getHighlightStyleSelectList($this->value(), $this->env->variable(),'false');
		return $this->inputChoice($input);
	}
}
 
class _fontsizeField extends _numberField
 implements Ifield, Iecho, IcontentWriter {
	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input(){
		$input = getFontSizeSelectList($this->value(), $this->env->variable(),'false');
		return $this->inputChoice($input);
	}
}
 
class _fontFamilyField extends _textField
 implements Ifield, Iecho, IcontentWriter {
 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input(){
		$input = getFontFamilySelectList($this->value(), $this->env->variable(),'false');
		return $this->inputChoice($input);
	}
}
 
?>
