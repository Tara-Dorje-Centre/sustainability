<?php
namespace application\entities\reference\forms;

class taskTypeFields extends \application\forms\fields{
	//standard entity type fields
	public $id;
	public $name;		
	public $created;
    public $updated;
	public $description;
	public $highlight;
	public $displayOrder;
	public $notes;
	
	//unique to task type
	public $frequency;
	
	public function __construct(){
		parent::__construct();
		
		$this->id = new \application\forms\_id('id','id','not-used');
    	$this->name = new \application\forms\_name('name','name','Name');
    	$this->description = new \application\forms\_description('description','description','Description');
		$this->updated = new \application\forms\_date('updated','updated','Updated');
    	$this->created = new \application\forms\_date('created','created','Created');
        $this->highlight = new \application\forms\_cssHighlight('highlight_style','highlight','Highlight');
        $this->notes = new \application\forms\_notes('notes','notes','Notes');
		$this->displayOrder = new \application\forms\_number('display_order','display-order','Display Order');
    
		$this->frequency = new \application\forms\_name('frequency','frequency','Frequency');
	
		$this->registerFields();
		$this->disableFields();
	}
	
	
	private function registerFields(){
		//define field ordering for display and list
		$this->_register('id', $this->id);
		$this->_register('displayOrder', $this->displayOrder);
		$this->_register('name', $this->name);
		
		$this->_register('frequency',$this->frequency);
		$this->_register('highlight', $this->highlight);
		$this->_register('description', $this->description);
		$this->_register('notes', $this->notes);
		$this->_register('created', $this->created);
		$this->_register('updated', $this->updated);

	}
	
	private function disableFields(){
		$this->updated->envEnabled(false);
        $this->created->envEnabled(false);
        $this->updated->listEnabled(false);
        $this->created->listEnabled(false);
    	$this->description->listEnabled(false);
    	$this->notes->listEnabled(false);
    	
    	$this->id->listEnabled(false);
    	$this->id->displayEnabled(false);
	}
	
	public function setDefaults(){
    	parent::setDefaults();
		$this->id->setDefault(0);
		$this->name->setDefault('');
		$this->description->setDefault('');
		$this->created->setDefault($this->_currentTimestamp);
		$this->updated->setDefault($this->_currentUser);
		$this->highlight->setDefault('none');
		$this->displayOrder->setDefault(0);
		$this->notes->setDefault('');
		$this->frequency->setDefault('none');
    }
	
}


?>
