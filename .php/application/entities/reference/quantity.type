<?php
namespace application\entities\reference;



class quantityType extends \application\entityType{
	public function __construct(){
		parent::__construct();
		
		$this->entity = 'quantity-type';
		$this->entityTitle = 'Quantity Type';
		//$this->pageSave = 'quantityType.php';
	
		$this->f = new forms\quantityTypeFields();
		$this->f->setEntity($this->entity);
		$this->sql = new sql\quantityTypeSQL();
		$this->links = new links\quantityTypeLinks();
	}
	
	
	protected function pageMenu(){
		/*
		
		
		$units = new UnitOfMeasureLinks($menuType,$menuStyle);
		$measureTypes = new MeasureTypeLinks($menuType,$menuStyle);

		$menu .= $menuL->linkReference();

		if ($this->pageMode == 'VIEW'){
			$menu .= $units->detailEditHref($this->id);
		} elseif ($this->pageMode == 'EDIT'){
			$menu .= $units->detailViewHref($this->id);
		}
		$menu .= $units->listingHref();
		//$menu .= $measureTypes->listingHref();
		
		
		*/
	}
	
	
	
	public function options(
		$selectedValue = 0, 
		$idName = 'unitTypeId', 
		$disabled = 'false', 
		$showLink = true,
		$changeJS = NULL){
	
		$sql = $this->sql->options($selectedValue,$disabled);
		
		$defaultValue = '0';
		$defaultCaption = '-select Unit Type';
		$allOptions = getSelectOptionsSQL($sql,$selectedValue,$disabled,$defaultValue,$defaultCaption);		
				
		$select = getSelectList($idName,$allOptions,'none',$disabled,$changeJS);
		
		if ($showLink == true){
			$links =$this->links->detailViewEditHref($selectedValue);
			$select .= $links;
		}
		return $select;
	}	
	
	
	
	public function editForm(){
	
		$url = $this->links->request->getUrlEntitySave($this->f->id->value(),0,0);
	
		$this->edit = new \application\forms\inputForm($url->print(), $this->entityTitle,$this->pageMode,$this->entity,true);
		
		$this->edit->required->input($this->f->name);
		
		$this->edit->required->input($this->f->symbol);
		$this->edit->required->input($this->f->type);
		
		$this->edit->required->input($this->f->displayOrder);
		$this->edit->required->input($this->f->highlight);
		
		$this->edit->optional->input($this->f->description);
		$this->edit->optional->input($this->f->notes);
		
		$this->edit->hidden->inputHidden($this->f->id);
		$this->edit->setRequestMode($this->pageMode);
		$this->edit->setSubmitButtons();
		
		return $this->edit->print();
		
	}
	
	public function saveUpdate(){
	
			$sql = " UPDATE units_of_measure AS p ";
			$sql .= " SET ";
			$sql .= " p.description = '".$this->f->description->value()."', ";
			$sql .= " p.type = '".$this->f->type->value()."', ";
			$sql .= " p.display_order = ".$this->f->displayOrder->value().", ";
			$sql .= " p.highlight_style = '".$this->f->highlight->value()."', ";
			$sql .= " p.name = '".$this->f->name->value()."', ";

			$sql .= " p.symbol = '".$this->f->symbol->value()."', ";
			$sql .= " p.updated = CURRENT_TIMESTAMP, ";
			$sql .= " p.notes = '".$this->f->notes->value()."' ";
			$sql .= " WHERE p.id = ".$this->f->id->value()."  ";			
			$result = dbRunSQL($sql);

	}
	
	protected function saveInsert(){
	
			$sql = " INSERT INTO units_of_measure ";
			$sql .= " (name, ";
			$sql .= " description, ";
			$sql .= " display_order, ";
			$sql .= " highlight_style, ";

			$sql .= " created, ";
			$sql .= " updated, ";
			$sql .= " type, ";
			$sql .= " symbol, ";
			$sql .= " notes) ";
			$sql .= " VALUES (";
			$sql .= "'".$this->f->name->value()."', ";
			$sql .= "'".$this->f->description->value()."', ";
			$sql .= "'".$this->f->displayOrder->value()."', ";
			$sql .= "'".$this->f->highlight->value()."', ";
			$sql .= " CURRENT_TIMESTAMP, ";
			$sql .= " CURRENT_TIMESTAMP, ";
			$sql .= "'".$this->f->type->value()."', ";
			$sql .= "'".$this->f->symbol->value()."', ";
			$sql .= "'".$this->f->notes->value()."') ";
			
			$result = dbRunSQL($sql);
			
			$this->id = dbInsertedId();
			$this->f->id-set($this->id);
	}
} 

class quantityTypeList extends \application\entityTypeList{
	public function __construct(){

		parent::__construct();

		$this->entityTitle = 'Quantity Types';
		$this->base = new quantityType();

	}
}

?>
