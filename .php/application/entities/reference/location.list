<?php
namespace application\entities\reference;

class locationList extends \application\entityList{
 	public function __construct(){
		parent::__construct();
		$this->entityTitle = 'Locations';
		$this->base = new location();
	}
	
	public function getRequestArguments(){
		parent::getRequestArguments();
		$this->base->getRequestArguments();
	}
	protected function makePageTitle(){

		if ($this->idParent <= 0){	
			$title = 'All Locations';
		} else {
			$title = 'Sub Locations: '.$this->base->getSortKey($this->idParent);
		}

		$this->_pageTitle = $title;	
	}
	
	protected function makePageMenu(){
		
		$s = new \application\links\systemMenuLinks();
		$this->base->links->addLink($s->reference());
		$this->base->links->listingLinks($this->pageMode,$this->id,$this->idParent,$this->idType);
		
		$this->_pageMenu = $this->base->links->print();
	}
	
	public function setFoundCount(){
		if ($this->idParent <= 0){
			// idParent is -1 or 0, list all locatons
			$sql = $this->base->sql->count();
			$this->echoPrint(true, 'count all locations','setCount');
		} else {
			// f id is positive -- listdirect children
			$sql = $this->base->sql->countChildren($this->idParent);
			$this->echoPrint(true, 'count child locations');
		} 

		$this->found = $this->base->sql->getCount($sql, 'count_details');
	}
	
	protected function listingQuickEdit(){
		$p = 0;
		if ($this->idParent < 0){
			$p = 0;			
		} else {
			$p = $this->idParent;		
		}	
		$quickEdit = $this->base->addForm($p);		
		return $quickEdit;
	}
	
	protected function listingSQL(){
	
		 if ($this->idParent <= 0){
		 	$this->echoPrint(true, 'fetching all','getListingRows');
		 	$sql = $this->base->sql->list($this->resultPage,$this->perPage);
		 } else {
		 	$this->echoPrint(true, 'fetching children','getListingRows');
		 	$sql = $this->base->sql->listChildren($this->idParent,$this->resultPage,$this->perPage);
		 }
		 
		 return $sql;
	}
	
}
?>
