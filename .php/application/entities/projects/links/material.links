<?php
namespace application\entities\projects\links;

class materialLinks extends \application\links\entityLinks {
	public function __construct(){
		$context = 'material';
		parent::__construct($context);
	}
	
	public function setRequest(){
		$this->request = new materialRequest($this->entityContext,$this->pagePortal);
	}
	
	public function urlMaterialList($idActivity,$idTask,$idProject,$showSummary = 'NO',$displayLevel= 'ACTIVITY'){
		$url = $this->request->getUrlMaterialList($idActivity,$idTask,$idProject,$showSummary,$displayLevel);
		return $url;
	}
	
	public function projectMaterials($idProject){
		$u = $this->urlMaterialList(0, 0, $idProject, 'NO','PROJECT');
		$caption = 'Project Materials';
		return $this->getLink($u,$caption);
	}
	
	public function taskMaterials($idTask){
		$u = $this->urlMaterialList(0, $idTask, 0, 'NO','TASK');
		$caption = 'Task Materials';
		return $this->getLink($u,$caption);
	}
	
	public function activityMaterials($idActivity){
		$u = $this->urlMaterialList($idActivity, 0, 0, 'NO','ACTIVITY');
		$caption = 'Activity Materials';
		return $this->getLink($u,$caption);
	}
	
	public function projectMaterialsSummary($idProject){
		$u = $this->urlMaterialList(0, 0, $idProject, 'YES','PROJECT');
		$caption = 'Project Materials';
		return $this->getLink($u,$caption);
	}
	
	public function taskMaterialsSummary($idTask){
		$u = $this->urlMaterialList(0, $idTask, 0, 'YES', 'TASK');
		$caption = 'Task Materials';
		return $this->getLink($u,$caption);
	}
	
	public function activityMaterialsSummary($idActivity){
		$u = $this->urlMaterialList($idActivity, 0, 0, 'YES','ACTIVITY');
		$caption = 'Activity Materials';
		return $this->getLink($u,$caption);
	}
	
	public function pagedListing(\application\links\url $altUrl = NULL, $count = 0, $page = 1, $rows = 10, $idActivity = 0, $idTask = 0,$idProject = 0,$showSummary = 'NO',$displayLevel='ACTIVITY'){
		$p = new \application\links\linkMenuPaged($rows,'material-results-page');
		if (is_null($altUrl)){
			$url = $this->urlMaterialList($idActivity,$idTask,$idProject,$showSummary,$displayLevel);
		} else {
			$url = $altUrl;
		}
		
		return $p->makePagedLinks($url, $count,$page);
	}
	
}
?>
