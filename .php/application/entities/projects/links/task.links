<?php
namespace application\entities\projects\links;

class taskLinks 
extends \application\links\entityLinks {
	public function __construct(){
		$context = 'task';
		parent::__construct($context);

	}
	public function setRequest(){
		$this->request = new taskRequest($this->entityContext,$this->pagePortal);
	}
	
	public function periodicTasks(bool $closed = false){
		if ($closed == true){
			$status = 'COMPLETE';
			$caption = 'Tasks Done';
		} else {
			$status = 'INCOMPLETE';
			$caption = 'Tasks To Do';
		}
		$periodic = 'YES';
		$url = $this->request->getUrlTaskList('LIST',-1,0,0, $status, $periodic);

		$l = $this->getLink($url,$caption);
		return $l;	
	}
	public function periodicTasksOpen(){
		return $this->periodicTasks(false);
	}
	public function periodicTasksClosed(){
		return $this->periodicTasks(true);
	}
	
	public function editingLinks(string $mode = 'VIEW', $id = 0,$idParent = 0,$idType = 0){
		
		$p = new projectLinks();
		$this->addLink($p->view('View Project',$idParent));
		
		switch ($mode){
			case 'VIEW':
				$this->addLink($this->list('List Tasks',0,$idParent,0));
				$this->addLink($this->edit('Edit Task',$id));
				$this->addLink($this->add('New Task',$idParent));
				//$this->addLink($this->add('AddChild',$id));
				//$this->addLink($this->add('AddSibling',$idParent));
				//$this->addLink($this->copy('Copy',$id));
				break;
			case 'EDIT':
				$this->addLink($this->list('List Tasks',0,$idParent,0));
				$this->addLink($this->view('View Task',$id));
				
				break;
			case 'ADD':
				$this->addLink($this->list('List Tasks',0,$idParent,0));
				break;
			default:
				$this->addLink($this->list('List Tasks',0,$idParent,0));
				$this->addLink($this->view('View Task',$id));
		
		}
		
	}
	
}
?>
