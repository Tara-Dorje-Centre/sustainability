<?php
namespace application\entities\projects\forms;

class measureFields extends 
\application\forms\fields{
	
	public $id;
	public $name;		

	public $project;
	public $task;
	public $activity;
	public $location;
	
	public $type;
	public $highlight;
	public $unitType;
	public $unitSymbol;
	
	public $description;
	public $reported;
	public $doneBy;
    public $updated;
	public $value;
	public $notes;
	
	public function __construct(){
		parent::__construct();
    	
		$this->id = new \application\forms\_id('id','id','not-used');
    	$this->name = new \application\forms\_name('name','name','Measure');
    	
    	$this->project = new \application\forms\_idName('project_id','id-project','Project','project_name');
    	$this->task = new \application\forms\_idName('task_id','id-task','Task','task_name');
    	$this->activity = new \application\forms\_idName('activity_id','id-activity','Activity','activity_name');
    	$this->location = new \application\forms\_idName('location_id','id-location','Location', 'location_name');
    	
    	$this->type = new \application\forms\_idName('measure_type_unit_id','idType','Type','type_name');
        $this->highlight = new \application\forms\_cssHighlight('highlight_style','highlight','Highlight');
	 	$this->unitSymbol = new \application\forms\_name('unit_symbol','not-used','Symbol');
	 	$this->unitType = new \application\forms\_name('unit_type','not-used','Unit Type');
    	
    	$this->description = new \application\forms\_description('description','description','Description');
		$this->reported = new \application\forms\_date('date_reported','date-reported','Reported');
		$this->updated = new \application\forms\_date('updated','updated','Updated');
		$this->doneBy = new \application\forms\_user('done_by','done-by','Done By');
		$this->value = new \application\forms\_number('value','value','Value');	
		$this->notes = new \application\forms\_notes('notes','notes','Notes');
	 
		$this->registerFields();
		$this->disableFields();
	}
	
	private function registerFields(){
	 	$this->_register('id', $this->id);
		$this->_register('name', $this->name);
		
		$this->_register('project', $this->project);
		$this->_register('task', $this->task);
		$this->_register('activity', $this->activity);
		$this->_register('location', $this->location);
	
	 	$this->_register('type', $this->type);
	 	$this->_register('highlight', $this->highlight);
		$this->_register('unitSymbol', $this->unitSymbol);
		$this->_register('unitType', $this->unitType);

		$this->_register('description', $this->description);
		$this->_register('reported', $this->reported);
		$this->_register('updated', $this->updated);
		$this->_register('doneBy', $this->doneBy);
   		$this->_register('value', $this->value);
   		$this->_register('notes', $this->notes);

 }


private function disableFields(){
		$this->id->listEnabled(false);
		$this->id->displayEnabled(false);
		$this->updated->envEnabled(false);
        //$this->reported->envEnabled(false);
        
        $this->updated->listEnabled(false);
        $this->reported->listEnabled(false);
        $this->name->listEnabled(false);
        $this->description->listEnabled(false);
        $this->notes->listEnabled(false);
 
 
    }


 public function setDefaults(){
 	parent::setDefaults();
	$this->reported->setDefault($this->currentTimestamp);
	$this->doneBy->setDefault($this->currentUser);
	$this->value->setDefault(1);
	$this->type->setDefault(0);

 }
 
 }
 


?>
