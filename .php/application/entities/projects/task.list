<?php
namespace application\entities\projects;

class taskList extends \application\entityList{
//protected $project;
	public $periodicTasks = 'NO';

	public function __construct(){
		parent::__construct();
		$this->entityTitle = 'Tasks';
		$this->base = new task();

	}
	public function getRequestArguments(){
		parent::getRequestArguments();
		//push identifiers to base object
		//sets quickEdit form default idParent
		$this->base->setIdentifiers($this->pageMode,$this->id,$this->idParent,$this->idType);
	}
	public function setPeriodic($periodic = 'NO'){
		$this->periodicTasks = $periodic;
	}
	
	protected function makePageTitle(){

		if ($this->periodicTasks == 'NO'){
			
			$p = new project();
			$name = $p->getProjectName($this->idParent);
			$title = 'Project: '.$name.'<br />';
			$title .= 'All Tasks';
		} else {
			$title .= 'Periodic Tasks';
		}

		$this->_pageTitle = $title;
	}
	/*
	protected function makePageMenu(){
	
		
	//	$projectL = new ProjectLinks($menuType,$menuStyle);

		
		if ($this->periodicTasks == 'NO'){
			$menu .= $this->base->links->add($this->idProject);
			$menu .= $this->base->links->listingHref($this->base->idProject);
			$menu .= $this->project->links->detailViewHref($this->base->idProject);	
		} else {
			//$menu .= $taskL->linksPeriodicTasks();
			//$menu .= $taskL->formatOptionsLink();
			//$menu .= $projectL->listingAllProjects();
		}
		
		$this->_pageMenu = $menu;	
		
		
	}*/
	
	private function getPeriodicTasksComplete(){
		$complete = 'NO';
		if ($this->periodicTasks == 'COMPLETE'){
			$complete = 'YES';
		} elseif ($this->periodicTasks == 'INCOMPLETE'){
			$complete = 'NO';
		}
		return $complete;		
	}
	
	public function setFoundCount(){
		if ($this->periodicTasks == 'NO'){
			$sql = $this->base->sql->countProject($this->idParent);
		} else {
			$sql = $this->base->sql->countPeriodic($this->getPeriodicTasksComplete());
		}
		
		$this->found = $this->base->sql->getCount($sql,'count_details');
		
	}
	
	protected function listingPagingLinks($pagingBaseLink = 'USE_LISTING'){
	
		if ($pagingBaseLink == 'USE_LISTING'){
			$base = $this->base->links->listing($this->idParent,$this->periodicTasks);
		} else { 
			$base = $pagingBaseLink;
		 }
		$pagingLinks = $this->base->links->listingPaged($base,$this->found,$this->resultPage,$this->perPage);		
		return $pagingLinks;
	
	}
	
	protected function listingQuickEdit(){
		$quickEdit =$this->base->addForm($this->idParent);		
		return $quickEdit;
	}
	
	
	public function listingSQL(){
	
		//$sql = $this->base->sql->listProject($this->idParent,$this->resultPage,$this->perPage);
				
	
	
		if ($this->periodicTasks == 'NO'){
			$sql = $this->base->sql->listProject($this->idParent,$this->resultPage,$this->perPage);
		} else {
			$sql = $this->base->sql->listPeriodic($this->getPeriodicTasksComplete(),$this->resultPage,$this->perPage);	
		}
		
		return $sql;
		}
		
}
?>
