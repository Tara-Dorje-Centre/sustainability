<?php 
namespace application\forms;

class userField extends textField{

 public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input( ){
		$i = new \html\inputs\user($this->env->variable(),$this->value(), $this->_caption);
		return $i->print();
	}

}
class passwordField extends textField{

 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}

	public function input( ){
		$i = new \html\inputs\password($this->env->variable(),$this->_caption);
		return $i->print();
	}
	public function generate($length = 11) {
		$chars = '.!%^&*#@';
		$clen = mb_strlen($chars);
		$base = md5(microtime());
		$password = substr(base_convert(substr($base,1),16,36),0,$length);
		$len = mb_strlen($password);
		for($i = 0;$i < $len;$i++)
		{
			if(rand(0,1) && 1){
				$password[$i] = strtoupper($password[$i]);
			} elseif(rand(0,2) && 1 && $clen){
				$password[$i] = $chars[rand(0,$clen - 1)];
			}
		}
		return $password;
	}
}
class emailField extends textField{

 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
 	public function input( ){
 		$i = new \html\inputs\email($this->env->variable(),$this->value(),$this->_caption);
		return $i->print();
	}
}

class urlField extends textField{

	public function input( ){
		$i = new \html\inputs\url($this->env->variable(),$this->value(),$this->_caption);
		return $i->print();
	}
}

class nameField extends textField{

	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input( ){
 		$i = new \html\inputs\name($this->env->variable(),$this->value(),$this->_caption);
		return $i->print();
	}
}

class idField extends numberField{

	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input( ){
 		$i = new \html\inputs\id($this->env->variable(),$this->value(),$this->_caption);
		return $i->print();
	}
}

class descriptionField extends textField{

 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input( ){
		$i = new \html\inputs\description($this->env->variable(),$this->value(),$this->_caption);
		return $i->print();
	}
}
class notesField extends textField{

 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input(){
		$i = new \html\inputs\notes($this->env->variable(),$this->value(),$this->_caption);
		return $i->print();
	}
}
	
class commentsField extends textField{

 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input(){
		$i = new \html\inputs\comments($this->env->variable(),$this->value(),$this->_caption);
		return $i->print();
	}
	
}
	
class yesNoField extends textField{

 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input( ){
		$i = new \html\inputs\selectYesNo($this->env->variable(), $this->value(),$this->_caption);
		return $i->print();
	}
	
}

class cssColorField extends textField{

 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input(){
		$i = new \html\inputs\selectColor($this->env->variable(),$this->value(),$this->_caption);
		return $i->print();
	}
}
trait selectQueryField{
	protected $_select;
 	protected $sql;
	protected $useSelect = false;
	public function setSql($sql){
		$this->sql = $sql;
		$this->_select = new \html\inputs\selectSql($this->env->variable(),$this->value(),$this->sql, $this->_caption);
		$this->useSelect = true;
	}
	public function setSelect(\html\inputs\selectSql $s){
		$this->_select = $s;
		$this->useSelect = true;
	}
	public function input(){
		if ($this->useSelect == true){
			$input = $this->_select->print();
		} else {
			$input = parent::input;
		}
	}
}



 class selectTextField extends textField{
	use selectQueryField;
	
 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	
	
}
 class selectNumberField extends numberField{
	use selectQueryField;

 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	
}
class selectIdField extends selectNumberField{




}
 class cssHighlightField extends textField{

 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input(){
		$i = new \html\inputs\selectHighlight($this->env->variable(),$this->value(),$this->_caption);
		return $i->print();
	}
}
 
class fontsizeField extends numberField{

	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input(){
		$i = new \html\inputs\selectFontSize($this->env->variable(),$this->value(),$this->_caption);
		return $i->print();
	}
}
 
class fontFamilyField extends textField{

 	public function __construct(string $dbCol = 'not_used', string $envVar = 'not-used', string $caption = 'no caption'){
		parent::__construct($dbCol, $envVar, $caption);
	}
	public function input(){
		$i = new \html\inputs\selectFontFamily($this->env->variable(),$this->value(), $this->_caption);
		return $i->print();
	}
}
 
?>
