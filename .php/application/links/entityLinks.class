<?php
namespace application\links;


 class entityLinks extends baseEntityLinks
implements IentityLinks{
use entityParameters;
	public function __construct(){
		parent::__construct();
		$context = 'entity';
		$pageDetail = 'index.php';
		$pageList = 'index.php';
		$this->setLinkContext($context,$pageList,$pageDetail);
		
	}
	public function listingLinks($mode = 'LIST',$id,$idParent,$idType){
		$this->addLink($this->add('AddChild',$id));
		$this->addLink($this->add('AddSibling',$idParent));
		$this->addLink($this->list('List',$idParent));
		$this->addLink($this->list('ListChildren',$id));
		$this->addLink($this->list('listType',0,$idType));
		
	}
	public function editingLinks($mode = 'VIEW', $id,$idParent,$idType){
		switch ($mode){
			case 'VIEW':
				$this->addLink($this->edit('Edit',$id));
				$this->addLink($this->add('AddChild',$id));
				$this->addLink($this->add('AddSibling',$idParent));
				$this->addLink($this->copy('Copy',$id));
				break;
			case 'EDIT':
				$this->addLink($this->view('View',$id));
				
				break;
			case 'ADD':
				$this->addLink($this->list('List',$idParent));
				break;
			default:
				$this->addLink($this->view('View',$id));
		
		}
		
	}
	
	
	public function urlList( $idParent, $idType){
		$u = $this->baseUrlList();
		$this->setEntityParametersList($u, $idParent,$idType);
		return $u;
	}
	
	public function urlDetail($action, $id, $idParent){
		$u = $this->baseUrlDetail();
		$this->setEntityParametersDetail($u,$action,$id,$idParent);
		return $u;
	}	
	
	public function detail(string $caption, $action, $id=0,$idParent=0){
		$url = $this->urlDetail($action,$id,$idParent);
		$l = $this->getLink($url,$caption);
		return $l;	
	}	
	public function list(string $caption,$idParent=0,$idType=0){
		$url = $this->urlList($idParent,$idType);
		$l = $this->getLink($url,$caption);
		return $l;	
	}
	
	public function add($caption = 'New', $idParent){
		return $this->detail($caption,'ADD',0,$idParent);
	}
	public function view($caption = 'View', $id){
		return $this->detail($caption,'VIEW',$id);
	}
	public function edit($caption = 'Edit', $id){
		return $this->detail($caption,'EDIT',$id);
	}
	public function copy($caption = 'Copy', $id){
		return $this->detail($caption,'COPY',$id);
	}
	
	
	public function contextList(){
		return $this->list($this->context,0,0);
	}
	
	public function viewEdit($caption, $id,$editCaption='[#]'){
		$d = new \html\_div('list-link','list-item-link');
		$lView = $this->view($caption,$id);
		$lEdit = $this->edit($editCaption,$id);
		$d->addContent($lView->print());
		$d->addContent($lEdit->print());
		return $d->print();
	}	
	
	public function pagedListing($count, $page, $rows, $idParent, $idType){
		$p = new linkMenuPaged($rows,'results-page');
		$u = $this->urlList($idParent,$idType);
		$p->makePagedLinks($u, $count,$page);
		return $p->print();
	}
	
	
	
		
	
}

?>
