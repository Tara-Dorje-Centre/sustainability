<?php 
namespace application;

abstract class entityType extends entity{

	public function __construct(){
		parent::__construct();
	}
	public function setDetails(){
		parent::setDetails();
		$this->f->name->caption = $this->entityTitle;
	}
	protected function makePageTitle(){
		$this->_pageTitle = $this->entityTitle;
	}
	
	protected function makePageMenu(){

		$s = new \application\links\systemMenuLinks();
		$this->links->addLink($s->reference());

		$this->links->editingLinks($this->pageMode,$this->id,$this->idParent,$this->idType);
		//$this->_pageMenu = $this->links->menu->print();
		$this->_pageMenu = $this->links->print();
	}
	
	protected function setDefaults(){
		parent::setDefaults();
		if ($this->pageMode == 'ADD'){
		
		$s = $this->sql->count();
		
		$next = $this->sql->getCount($s, 'count_details');
		//global $conn;
		//$next = $conn->getCount($s, 'count_details');
		$next += 1;
		$this->echoValue(true,'next',$next,'setdefaults');
		$this->f->displayOrder->set($next);
		}
		
	}
	public function editForm(){
	
		$url = $this->links->request->getUrlEntitySave($this->f->id->value(),0,0);
	
		$this->edit = new forms\inputForm($url->print(), $this->entityTitle,$this->pageMode,$this->entity,true);
		
		$this->edit->required->input($this->f->name);
		$this->edit->required->input($this->f->displayOrder);
		$this->edit->required->input($this->f->highlight);
		
		$this->edit->optional->input($this->f->description);
		$this->edit->optional->input($this->f->notes);
		
		$this->edit->hidden->inputHidden($this->f->id);
		$this->edit->setRequestMode($this->pageMode);
		$this->edit->setSubmitButtons();
		
		return $this->edit->print();
	}
	
	protected function saveUpdate(){

			$sql = " UPDATE ".$this->sql->getBaseTable()." AS base ";
			$sql .= " SET ";
			$sql .= " base.name = '".$this->f->name->value()."', ";
			$sql .= " base.description = '".$this->f->description->value()."', ";
			$sql .= " base.updated = CURRENT_TIMESTAMP, ";
			$sql .= " base.highlight_style = '".$this->f->highlight->value()."', ";
			$sql .= " base.display_order = ".$this->f->displayOrder->value().", ";
			$sql .= " base.notes = '".$this->f->notes->value()."' ";
			$sql .= " WHERE base.id = ".$this->f->id->value()."  ";		
			
			
			$result = $this->sql->runStatement($sql);
	}
	
	protected function saveInsert(){
			$sql = " INSERT INTO ".$this->sql->getBaseTable();
			$sql .= " (name, ";
			$sql .= " created, ";
			$sql .= " updated, ";
			$sql .= " description, ";
			$sql .= " display_order, ";
			$sql .= " highlight_style, ";
			$sql .= " notes) ";
			$sql .= " VALUES (";
			$sql .= "'".$this->f->name->value()."', ";
			$sql .= " CURRENT_TIMESTAMP, ";
			$sql .= " CURRENT_TIMESTAMP, ";
			$sql .= "'".$this->f->description->value()."', ";
			$sql .= $this->f->displayOrder->value().", ";
			$sql .= "'".$this->f->highlight->value()."', ";
			$sql .= "'".$this->f->notes->value()."') ";
			
			$result = $this->sql->runStatement($sql);
			
			$id = $this-â‰¥sql->getInsertedId();
			$this->f->id->set($id);
			$this->id = $this->f->id->value();
	}
	
		
}





?>
