<?php 
namespace application;

class portalRequest extends \framework\_echo{

	public $entity;
	public $scope;
	protected $response;
	
	public function __construct(){
		$this->entity = new forms\_text('not-used','context');
		$this->scope = new forms\_text('not-used','scope');

		$this->entity->envEnabled(true);
		$this->scope->envEnabled(true);

		$this->entity->env->setEnvironment('GET');
		$this->scope->env->setEnvironment('GET');

		$this->entity->read();
		$this->scope->read();

		$this->echoValue(true,'context',$this->entity->value());
		$this->echoValue(true,'scope',$this->scope->value());
		
	}
	
	protected function loginStatus(){
		$status = false;
		
		//is user currently logged in?
		if (isset($_SESSION['logged-in']) and ($_SESSION['logged-in'] == true)){
			$status = true;
			$this->echoValue(true,'logged in','authorized session','loginStatus');
		} else {
			//not logged in
			$status = false;
			$this->echoValue(true,'not logged in','unauthorized session','loginStatus');
		}
	
		//did user just select login
		
		//did user select reset password
		
		
		return $status;
	}
	
	public function load(){
	
		if ($this->scope->value() == 'logout') {
			$this->loadLogout();
			exit;
		}
	
		if ($this->loginStatus() == false) { 
			$this->loadLogin();
			exit;
		}
			
		switch ($this->entity->value()){
			//system pages
			case 'system-menu':
				$this->loadSystemMenu();
				break;
			case 'siteSettings':
				$this->loadSiteSettings();
				break;
			case 'user';
				$this->loadUserProfiles();
				break;
			case 'userType':
				$this->loadUserType();
				break;
			//entity pages
			case 'project':
				$this->loadProject();
				break;
			case 'task':
				$this->loadTask();
				break;
			case 'activity':
				$this->loadActivity();
				break;
			case 'material':
				$this->loadMaterial();
				break;
			case 'receipt':
				$this->loadReceipt();
				break;
			case 'measure':
				$this->loadMeasure();
				break;
			case 'location':
				$this->loadLocation();
				break;
			//reference pages
			case 'locationType':
				$this->loadLocationType();
				break;
			case 'quantityType':
				$this->loadQuantityType();
				break;
			case 'projectType':
				$this->loadProjectType();
				break;
			case 'taskType':
				$this->loadTaskType();
				break;
			case 'activityType':
				$this->loadActivityType();
				break;
			case 'materialType':
				$this->loadMaterialType();
				break;
			case 'receiptType':
				$this->loadReceiptType();
				break;
			case 'measureType':
				$this->loadMeasureType();
				break;
				
			case 'measureTypeUnit':
				$this->loadMeasureTypeUnit();
				break;
			default:
				$this->loadDefault();
		}
	
	}
	
	protected function loadLogin(){
		$this->echoPrint(true,'starting','loadLogin');
		$u = new \application\system\userLogin('VALIDATE');
		$u->validate();
		
		if ($this->loginStatus() == true) {
			$this->loadDefault();
		} else {
			$site = new site('LOGIN');
			$site->set();
			$site->print();
		}
	}
	
	protected function loadLogout(){
		$this->echoPrint(true,'starting','loadLogout');
		$sw = new \application\system\siteSettings;
		$sw->unsetSessionDetails();
		$site = new site('LOGIN');
		$site->set();
		$site->print();
	}
	
	protected function loadDefault(){
		$this->loadSystemMenu();
	}
	
	protected function loadUserMenu(){
		$this->loadSystemMenu();
	}
	
	protected function loadSystemMenu(){
		$t = new systemMenu();
		$t->printRequest();
	}
	
	protected function save(\application\Ientity $e, $scope = 'list'){
		$e->collectPostValues();
		$e->SaveChanges();
		$this->scope->set($scope);
	}
	
	protected function loadSiteSettings(){
		if ($this->scope->value() == 'save'){
			$s = new system\siteSettings();
			$this->save($s);
		}
		$t = new system\siteSettings();
		$t->printRequest();
	}
	
	protected function loadUserProfiles(){
		if ($this->scope->value()  == 'save'){
			$s = new system\user();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new system\user();
		} else {
			$t = new system\userList();
		}
		$t->printRequest();
	}
	
	
	protected function loadUserType(){
		if ($this->scope->value()  == 'save'){
			$s = new system\userType();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new system\userType();
		} else {
			$t = new system\userTypeList();
		}
		$t->printRequest();
	}
	
	
	protected function loadProject(){
		$save = false;
		if ($this->scope->value() == 'save'){
			$s = new entities\projects\project();
			$this->save($s, 'detail');
			$save = true;
		}
		if ($this->scope->value() == 'detail'){
			if ($save == true){
				$_GET['id'] = $s->id;
			}
			$t = new entities\projects\project();
		} else {
			$t = new entities\projects\projectList();
		}
		$t->printRequest();
	}
	
	protected function loadTask(){
		if ($this->scope->value() == 'save'){
			$s = new entities\projects\task();
			$this->save($s);
		}
		if ($this->scope->value() == 'detail'){
			$t = new entities\projects\task();
		} else {
			$t = new entities\projects\taskList();
		}
		$t->printRequest();
	}
	
	protected function loadActivity(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\projects\activity();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\projects\activity();
		} else {
			$t = new entities\projects\activityList();
		}
		$t->printRequest();
	}
	
	protected function loadMaterial(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\projects\material();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\projects\material();
		} else {
			$t = new entities\projects\materialList();
		}
		$t->printRequest();
	}
	
	protected function loadReceipt(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\projects\receipt();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\projects\receipt();
		} else {
			$t = new entities\projects\receiptList();
		}
		$t->printRequest();
	}
	
	protected function loadMeasure(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\projects\measure();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\projects\measure();
		} else {
			$t = new entities\projects\measureList();
		}
		$t->printRequest();
	}
	
	protected function loadQuantityType(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\reference\quantityType();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\reference\quantityType();
		} else {
			$t = new entities\reference\quantityTypeList();
		}
		$t->printRequest();
	}
	
	protected function loadLocation(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\reference\location();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\reference\location();
		} else {
			$t = new entities\reference\locationList();
		}
		$t->printRequest();
	}
	
	protected function loadLocationType(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\reference\locationType();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\reference\locationType();
		} else {
			$t = new entities\reference\locationTypeList();
		}
		$t->printRequest();
	}
	
	protected function loadProjectType(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\reference\projectType();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\reference\projectType();
		} else {
			$t = new entities\reference\projectTypeList();
		}
		$t->printRequest();
	}
	
	protected function loadTaskType(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\reference\taskType();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\reference\taskType();
		} else {
			$t = new entities\reference\taskTypeList();
		}
		$t->printRequest();
	}
	
	protected function loadActivityType(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\reference\activityType();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\reference\activityType();
		} else {
			$t = new entities\reference\activityTypeList();
		}
		$t->printRequest();
	}
	
	protected function loadMaterialType(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\reference\materialType();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\reference\materialType();
	
		} else {
			$t = new entities\reference\materialTypeList();
		}
		$t->printRequest();
	}
	
	protected function loadReceiptType(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\reference\receiptType();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\reference\receiptType();
		} else {
			$t = new entities\reference\receiptTypeList();
		}
		$t->printRequest();
	}
	
	protected function loadMeasureType(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\reference\measureType();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\reference\measureType();
		} else {
			$t = new entities\reference\measureTypeList();
		}
		$t->printRequest();
	}
	
	protected function loadMeasureTypeUnit(){
		if ($this->scope->value()  == 'save'){
			$s = new entities\reference\measureTypeUnit();
			$this->save($s);
		}
		if ($this->scope->value()  == 'detail'){
			$t = new entities\reference\measureTypeUnit();
		} else {
			$t = new entities\reference\measureTypeUnitList();
		}
		$t->printRequest();
	}

}

?>
