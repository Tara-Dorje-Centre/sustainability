<?php 
namespace application;

class portalRequest{
	public $context;
	public $scope;
	
	public $pageAction;
	public $id;
	public $idParent;
	
	public function __construct(){
		$this->context = $_GET['context'];
		$this->scope = $_GET['scope'];
		/*$this->pageAction = $_GET['pageAction'];
		$this->id = $_GET['id'];
		$this->idParent = $_GET['idParent'];*/
	}

	public function loadContext(){
	
		switch ($this->context){
			case 'project':
			case 'task':
			case 'activity':
			case 'material':
			case 'measure':
			case 'projectType':
				$this->loadProjectType();
			case 'taskType':
				$this->loadTaskType();
			case 'activityType':
				$this->loadActivityType();
			case 'materialType':
				$this->loadMaterialType();
			case 'measureType':
				$this->loadMeasureType();
			case 'user';
				$this->loadUserProfiles();
			case 'userType':
				$this->loadUserType();
				break;
			case 'siteSettings':
				$this->loadSiteSettings();
			case 'userMenu':
			case 'systemMenu':
				$this->loadSystemMenu();
			default:
		
				$this->loadDefault();
		}
	
	}
	protected function loadQuantityType(){
		if ($this->scope == 'save'){
			$s = new entities\reference\quantityType();
			$s->collectPostValues();
			$s->saveChanges();
			$this->scope = 'list';
			$this->id = $s->id;
			$this->pageAction = 'VIEW';
		}
		if ($this->scope == 'detail'){
			$t = new entities\reference\quantityType();
	
		} else {
			$t = new entities\reference\quantityTypeList();
		}
		
		$t->setIdentifiers($this->pageAction,$this->id,$this->idParent);
		$t->getRequestArguments();
		$t->setDetails();
		$t->printPage();
	
	}
	protected function loadLocation(){
		if ($this->scope == 'save'){
			$s = new entities\reference\location();
			$s->collectPostValues();
			$s->saveChanges();
			$this->scope = 'list';
			$this->id = $s->id;
			$this->pageAction = 'VIEW';
		}
		if ($this->scope == 'detail'){
			$t = new entities\reference\location();
	
		} else {
			$t = new entities\reference\locationList();
		}
		
		$t->setIdentifiers($this->pageAction,$this->id,$this->idParent);
		$t->getRequestArguments();
		$t->setDetails();
		$t->printPage();
	}
	protected function loadLocationType(){
	
		if ($this->scope == 'save'){
			$s = new entities\reference\locationType();
			$s->collectPostValues();
			$s->saveChanges();
			$this->scope = 'list';
			$this->id = $s->id;
			$this->pageAction = 'VIEW';
		}
		if ($this->scope == 'detail'){
			$t = new entities\reference\locationType();
	
		} else {
			$t = new entities\reference\locationTypeList();
		}
		
		$t->setIdentifiers($this->pageAction,$this->id,$this->idParent);
		$t->getRequestArguments();
		$t->setDetails();
		$t->printPage();
	}
	protected function loadProjectType(){
		if ($this->scope == 'save'){
			$s = new entities\reference\projectType();
			$s->collectPostValues();
			$s->saveChanges();
			$this->scope = 'list';
			$this->id = $s->id;
			$this->pageAction = 'VIEW';
		}
		if ($this->scope == 'detail'){
			$t = new entities\reference\projectType();
	
		} else {
			$t = new entities\reference\projectTypeList();
		}
		
		$t->setIdentifiers($this->pageAction,$this->id,$this->idParent);
		$t->getRequestArguments();
		$t->setDetails();
		$t->printPage();
		
	}
	protected function loadTaskType(){
	
		if ($this->scope == 'save'){
			$s = new entities\reference\taskType();
			$s->collectPostValues();
			$s->saveChanges();
			$this->scope = 'list';
			$this->id = $s->id;
			$this->pageAction = 'VIEW';
		}
		if ($this->scope == 'detail'){
			$t = new entities\reference\taskType();
	
		} else {
			$t = new entities\reference\taskTypeList();
		}
		
		$t->setIdentifiers($this->pageAction,$this->id,$this->idParent);
		$t->getRequestArguments();
		$t->setDetails();
		$t->printPage();
	
	}
	protected function loadActivityType(){
	
		if ($this->scope == 'save'){
			$s = new entities\reference\activityType();
			$s->collectPostValues();
			$s->saveChanges();
			$this->scope = 'list';
			$this->id = $s->id;
			$this->pageAction = 'VIEW';
		}
		if ($this->scope == 'detail'){
			$t = new entities\reference\activityType();
	
		} else {
			$t = new entities\reference\activityTypeList();
		}
		
		$t->setIdentifiers($this->pageAction,$this->id,$this->idParent);
		$t->getRequestArguments();
		$t->setDetails();
		$t->printPage();
	}
	protected function loadMaterialType(){
			if ($this->scope == 'save'){
			$s = new entities\reference\materialType();
			$s->collectPostValues();
			$s->saveChanges();
			$this->scope = 'list';
			$this->id = $s->id;
			$this->pageAction = 'VIEW';
		}
		if ($this->scope == 'detail'){
			$t = new entities\reference\materialType();
	
		} else {
			$t = new entities\reference\materialTypeList();
		}
		
		$t->setIdentifiers($this->pageAction,$this->id,$this->idParent);
		$t->getRequestArguments();
		$t->setDetails();
		$t->printPage();
	
	}
	protected function loadReceiptType(){
	
			if ($this->scope == 'save'){
			$s = new entities\reference\receiptType();
			$s->collectPostValues();
			$s->saveChanges();
			$this->scope = 'list';
			$this->id = $s->id;
			$this->pageAction = 'VIEW';
		}
		if ($this->scope == 'detail'){
			$t = new entities\reference\receiptType();
	
		} else {
			$t = new entities\reference\receiptTypeList();
		}
		
		$t->setIdentifiers($this->pageAction,$this->id,$this->idParent);
		$t->getRequestArguments();
		$t->setDetails();
		$t->printPage();
	}
	protected function loadMeasureType(){
	
			if ($this->scope == 'save'){
			$s = new entities\reference\measureType();
			$s->collectPostValues();
			$s->saveChanges();
			$this->scope = 'list';
			$this->id = $s->id;
			$this->pageAction = 'VIEW';
		}
		if ($this->scope == 'detail'){
			$t = new entities\reference\measureType();
	
		} else {
			$t = new entities\reference\measureTypeList();
		}
		
		$t->setIdentifiers($this->pageAction,$this->id,$this->idParent);
		$t->getRequestArguments();
		$t->setDetails();
		$t->printPage();
	}
	protected function loadSiteSettings(){
	
		switch ($this->scope){
			case 'save':
				$um = new system\siteSettings();
				$um->collectPostValues();
				$um->saveChanges();
			case 'list':
			case 'detail':

			default:
				$t = new system\siteSettings();
				$t->getRequestArguments();
				$t->setDetails();
				$t->printPage();
		}
	}
	protected function loadDefault(){
		$this->loadSystemMenu();
	
	}
	
	protected function loadSystemMenu(){
		$t = new systemMenu();
		$t->getRequestArguments();
		$t->printPage();

	}
	protected function loadUserProfiles(){
	
	}
	protected function loadUserType(){
		switch ($this->scope){
			case 'detail':
				$t = new system\userType();
				break;
			case 'save':
				$um = new system\userType();
				$um->collectPostValues();
				$um->saveChanges();
			case 'list':

			default:
				$t = new system\userTypeList();
		}

		$t->setIdentifiers($this->pageAction,$this->id,$this->idParent);
		$t->getRequestArguments();
		$t->setDetails();
		$t->printPage();
	}

}

?>
