<?php 
namespace application;
	
abstract class entityList extends entity{
	public $found = 0;
	public $base;
	protected $_list;
	public function __construct(){
		parent::__construct();
		
	}
	
	public function getRequestArguments(){
		$this->requestArgsIdentifiers();
		$this->requestArgsPaging();
		$this->setDetails();
	}
	
	//override _entity.setDetails for listing
	public function setDetails(){
		//check counts, dont fetch details
		$this->setFoundCount();
	}
	
	
	protected function setFoundCount(){
		$sql = $this->base->sql->count();
		global $conn;
		$this->found = $conn->getCount($sql, 'count_details');
	}
	protected function makePageMenu(){
		$s = new \application\links\systemMenuLinks();
		$this->base->links->addLink($s->modules());
		$this->base->links->addLink($s->reference());
		$this->base->links->makeListingMenu($this->pageMode,$this->id,$this->idParent,$this->idType);
		
		$this->_pageMenu = $this->base->links->print();
	}
	protected function setPageTitle(){
		$this->_pageTitle = $this->titleEntity;
	}
	
	//overrides _entity.getPageDetails for listing query
	protected function getPageDetails(){
		$details = $this->getListing();
		return $details;
	}
	
	protected function listingStart(){
	
		//entity.links.pagedListing($count, $page, $rows, $idParent, $idType){
		$paging = $this->base->links->pagedListing($this->found,$this->resultPage,$this->perPage);	
		$add = $this->base->addForm();	
		$entity = $this->base->entity;
		$legend = $this->titleEntity.':  Details';
		
		
		$this->_display = new \html\displayList($entity,$paging,$legend,$add,true);

		
	}
	
	protected function listingSQL(){
		$sql = $this->base->sql->list($this->resultPage,$this->perPage);
		return $sql;
	}
	
	protected function listingRows(){
		$sql = $this->listingSQL();
		$result = $this->getResult($sql);
		if($result){
			
			$this->_display->addRow($this->base->listHeading());
		  	while ($row = $result->fetch_assoc())
			{	
				$this->_display->addRow($this->base->listRow($row));
			}
			$result->close();
		} else {
			$this->_display->makeRow('No results found');
			
		}
		
	}
	
	public function getListing(){

		
		$this->listingStart();
		
		$this->listingRows();
		
		return $this->_display->print();
	}
	
	protected function editForm(){
		return 'editForm not available';
	}

}



?>
